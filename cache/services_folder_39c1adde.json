{
  "content_hash": "4a30324139948ee86022ee717fe0b445",
  "timestamp": "2025-09-26T15:03:39.372538+07:00",
  "result": {
    "path": "internal/domains/proxy/services",
    "purpose": "Responsible for providing various services related to user activity, balance management, AI processing, cryptocurrency data fetching, and decentralized application management within a proxy architecture.",
    "languages": {
      "Go": 14
    },
    "key_modules": [
      "activity.go",
      "ai.go",
      "balance.go",
      "coingecko.go",
      "config.go",
      "dapp.go",
      "fiat.go",
      "metrics.go",
      "profile.go",
      "provider.go",
      "rpc.go",
      "simulate.go",
      "token.go",
      "utils.go"
    ],
    "dependencies": [],
    "architecture": "The folder follows a service-oriented architecture pattern, where each file defines a specific service interface and its implementation, facilitating modularity and separation of concerns.",
    "file_summaries": {
      "internal/domains/proxy/services/activity.go": {
        "language": "Go",
        "purpose": "Defines the ActivityService interface and its implementation for managing user activity and transfer history.",
        "key_types": [
          "ActivityService",
          "activityService",
          "NewActivityService"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/ai.go": {
        "language": "Go",
        "purpose": "Implements an AI service for processing chat requests using OpenAI's API.",
        "key_types": [
          "AIService",
          "ai",
          "ProcessChat"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/balance.go": {
        "language": "Go",
        "purpose": "Defines the BalanceService interface and its implementation for managing portfolio balance and NFT items.",
        "key_types": [
          "BalanceService",
          "balanceService",
          "GetPortfolioBalance"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/coingecko.go": {
        "language": "Go",
        "purpose": "Defines the Coingecko service interface and its implementation for fetching cryptocurrency data.",
        "key_types": [
          "CoingeckoService",
          "NewCoingeckoService",
          "GetCoingeckoPlatforms"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/config.go": {
        "language": "Go",
        "purpose": "Defines configuration structures for various services including token management and caching settings.",
        "key_types": [
          "Config"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "internal/domains/proxy/services/dapp.go": {
        "language": "Go",
        "purpose": "Defines a service for managing decentralized application (DApp) sites, including retrieval, deletion, and scanning functionalities.",
        "key_types": [
          "DAppService",
          "dappService",
          "NewDAppService"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/fiat.go": {
        "language": "Go",
        "purpose": "Implements a service for retrieving fiat information related to tokens.",
        "key_types": [
          "FiatService",
          "fiatService",
          "GetTokenFiatInfo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/metrics.go": {
        "language": "Go",
        "purpose": "Defines metrics for monitoring provider and service performance in a wallet proxy.",
        "key_types": [
          "observeProviderFn",
          "observeServiceFn",
          "AllMetrics"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/profile.go": {
        "language": "Go",
        "purpose": "Provides a service to check the existence of user profiles.",
        "key_types": [
          "ProfileService",
          "profileService",
          "CheckProfileExistence"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/provider.go": {
        "language": "Go",
        "purpose": "Defines a service for managing multi-chain providers in a proxy architecture.",
        "key_types": [
          "ProviderService",
          "providerMap",
          "providerMapBuilder"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/rpc.go": {
        "language": "go",
        "purpose": "Defines an RPC service for executing remote procedure calls.",
        "key_types": [
          "RpcService",
          "rpcService",
          "Execute"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/simulate.go": {
        "language": "Go",
        "purpose": "Implements a simulation service for processing RPC requests related to blockchain transactions.",
        "key_types": [
          "SimulationService",
          "blockaidSimulationService",
          "SimulateRPC"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/token.go": {
        "language": "Go",
        "purpose": "Defines the TokenService interface and its implementation for managing token-related operations.",
        "key_types": [
          "TokenService",
          "caches",
          "tokenService"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/utils.go": {
        "language": "Go",
        "purpose": "Utility functions for managing and combining NFT items in a portfolio.",
        "key_types": [
          "combineNftItems",
          "inlineSortNftItems"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      }
    }
  }
}