{
  "content_hash": "39802a5cda7535775c9e917019d4942f",
  "timestamp": "2025-09-26T13:26:34.648346+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines a user service for managing user data, including finding or creating users and caching user information.",
    "key_types": [
      "User",
      "UserSvc",
      "userSvc"
    ],
    "functions": [
      "NewUserSvc",
      "FindUserOrCreate",
      "FindUserByID",
      "findUserOrCreate",
      "findUserFromCache",
      "cacheUser",
      "wrapErr",
      "marshalUser"
    ],
    "imports": [
      "context",
      "encoding/json",
      "errors",
      "fmt",
      "strings",
      "time",
      "github.com/axieinfinity/ronin-wallet-services/internal/enums/quest_center",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models",
      "github.com/axieinfinity/ronin-wallet-services/pkg/helper",
      "github.com/axieinfinity/ronin-wallet-services/pkg/id-generator",
      "github.com/ethereum/go-ethereum/common",
      "github.com/redis/go-redis/v9",
      "go.uber.org/zap",
      "gorm.io/gorm"
    ],
    "side_effects": [
      "Interacts with Redis for caching user data",
      "Logs errors using zap logger"
    ],
    "risks": [
      "Potential for cache inconsistency if Redis fails",
      "Error handling may expose sensitive information in logs"
    ],
    "complexity": "medium"
  }
}