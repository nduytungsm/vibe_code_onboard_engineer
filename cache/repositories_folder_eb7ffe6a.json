{
  "content_hash": "5de309b3c5c9de05f20a6fe7fab46b40",
  "timestamp": "2025-09-26T17:41:39.882152+07:00",
  "result": {
    "path": "internal/repositories",
    "purpose": "Responsible for defining repository interfaces and implementations for various entities related to quests, users, events, and other game-related data in a database.",
    "languages": {
      "Go": 30
    },
    "key_modules": [
      "action.go",
      "activity_guidance.go",
      "check_in_wallet_log.go",
      "crawled_data.go",
      "definitions.go",
      "event.go",
      "game_played_logs.go",
      "helper.go",
      "point_tracker.go",
      "purchase_history_logs.go",
      "quest.go",
      "quest_pool.go",
      "reward.go",
      "role.go",
      "shop.go",
      "sponsor.go",
      "user.go",
      "user_event.go",
      "user_quest.go",
      "user_reward.go"
    ],
    "dependencies": [],
    "architecture": "Follows a repository pattern to abstract data access and provide a clean interface for database operations.",
    "file_summaries": {
      "internal/repositories/action.go": {
        "language": "Go",
        "purpose": "Defines a repository interface and implementation for managing quest actions in a database.",
        "key_types": [
          "Action interface",
          "action struct",
          "NewActionRepo function"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/activity_guidance.go": {
        "language": "Go",
        "purpose": "Defines a repository interface and implementation for managing activity guidance entities in a database.",
        "key_types": [
          "ActivityGuidanceRepository",
          "activityGuidanceRepository",
          "NewActivityGuidanceRepository"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/check_in_wallet_log.go": {
        "language": "Go",
        "purpose": "This file implements a repository for managing user check-in logs and streaks in a wallet service.",
        "key_types": [
          "CheckInLogRepository",
          "checkInLogRepo",
          "UserCheckInStreak"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/crawled_data.go": {
        "language": "Go",
        "purpose": "Defines the CrawledDataRepository interface for managing game registration and participant actions in a database.",
        "key_types": [
          "CrawledDataRepository",
          "GameRegistrationEntity",
          "GameMatchEntity"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/definitions.go": {
        "language": "Go",
        "purpose": "Defines constants for database table names used in the repositories package.",
        "key_types": [],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "internal/repositories/event.go": {
        "language": "Go",
        "purpose": "Defines an event repository interface and its implementation for managing event data in a database.",
        "key_types": [
          "EventRepo interface",
          "evRepo struct",
          "NewEventRepo function"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/game_played_logs.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing game played logs in a database using GORM.",
        "key_types": [
          "GamePlayedLogsRepository",
          "gamePlayedLogsRepository",
          "NewGamePlayedLogsRepository"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/helper.go": {
        "language": "Go",
        "purpose": "Provides helper functions for database operations using GORM.",
        "key_types": [
          "cleanupStaledByKeys",
          "bindTx",
          "txFromContext"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/point_tracker.go": {
        "language": "Go",
        "purpose": "This file defines a repository for tracking point activities in a database using GORM.",
        "key_types": [
          "PointTrackerRepo",
          "pointTrackerRepo",
          "NewPointTrackerRepo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/purchase_history_logs.go": {
        "language": "Go",
        "purpose": "Manages purchase history logs in a database using GORM.",
        "key_types": [
          "PurchaseHistoryLogsRepository",
          "UpsertBatch",
          "CleanupStaled"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/quest.go": {
        "language": "Go",
        "purpose": "Repository implementation for managing quest-related data and operations.",
        "key_types": [
          "Quest interface",
          "quest struct",
          "NewQuestRepo function"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/quest_pool.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing quest pools in a database using GORM.",
        "key_types": [
          "QuestPoolRepo interface",
          "poolRepo struct",
          "NewQuestPoolRepo function"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/reward.go": {
        "language": "Go",
        "purpose": "This file defines the RewardRepo interface for managing reward-related data operations in a repository pattern.",
        "key_types": [
          "FindRewardInfoByID",
          "TopUpPool",
          "ListRewardsInfo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/role.go": {
        "language": "Go",
        "purpose": "Defines a repository for managing roles in a database using GORM.",
        "key_types": [
          "RoleRepository",
          "roleRepository",
          "NewRoleRepository"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/shop.go": {
        "language": "Go",
        "purpose": "Defines the ShopRepo interface for managing shop categories, items, tiers, and purchases.",
        "key_types": [
          "GetCategories",
          "CreateItem",
          "CreatePurchase"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/sponsor.go": {
        "language": "Go",
        "purpose": "Defines a repository interface and implementation for managing sponsor entities in a database.",
        "key_types": [
          "SponsorRepo interface",
          "sponsorRepo struct",
          "NewSponsorRepo function"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/user.go": {
        "language": "Go",
        "purpose": "Defines a user repository interface and its implementation for database operations related to users.",
        "key_types": [
          "UserRepo interface",
          "userRepo struct",
          "NewUserRepo function"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/user_event.go": {
        "language": "Go",
        "purpose": "Defines a repository interface and implementation for managing user event data in a database.",
        "key_types": [
          "UserEventRepo",
          "userEventRepo",
          "NewUserEventRepo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/user_quest.go": {
        "language": "Go",
        "purpose": "Defines the UserQuestRepo interface for managing user quests in a repository pattern.",
        "key_types": [
          "UserQuestRepo",
          "FindAuditResult",
          "CreateUserQuestInfo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/repositories/user_reward.go": {
        "language": "Go",
        "purpose": "Repository for managing user rewards and related database operations.",
        "key_types": [
          "UserRewardRepo",
          "userRewardRepo",
          "NewUserRewardRepo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      }
    }
  }
}