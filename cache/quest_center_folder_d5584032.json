{
  "content_hash": "c27296f09cb09c2dff28182ba7257ad5",
  "timestamp": "2025-09-26T13:31:53.054764+07:00",
  "result": {
    "path": "internal/enums/quest_center",
    "purpose": "Defines various enums and types related to quest actions, statuses, rewards, and user interactions within a gaming context.",
    "languages": {
      "Go": 10
    },
    "key_modules": [
      "action_v2.go",
      "event.go",
      "log_param.go",
      "op_action_v2.go",
      "quest_pool.go",
      "quest_status_v2.go",
      "reward.go",
      "user.go",
      "user_quest_v2.go",
      "user_reward_v2.go",
      "user_tier.go"
    ],
    "dependencies": [
      "encoding/json",
      "github.com/axieinfinity/ronin-wallet-services/internal/enums",
      "github.com/samber/lo"
    ],
    "architecture": "The folder follows a modular architecture pattern, where each file defines specific enums and types related to quests, promoting separation of concerns and reusability.",
    "file_summaries": {
      "internal/enums/quest_center/action_v2.go": {
        "language": "Go",
        "purpose": "Defines enums for quest actions and platforms in a gaming context.",
        "key_types": [
          "QuestAction",
          "ActionPlatform"
        ],
        "functions": [
          "IsValid",
          "QuestActionFromStr",
          "Value",
          "Values",
          "MarshalJSON",
          "UnmarshalJSON",
          "Scan",
          "IsValid",
          "ActionPlatformFromStr",
          "Value",
          "Values",
          "MarshalJSON",
          "UnmarshalJSON",
          "Scan"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/event.go": {
        "language": "Go",
        "purpose": "Defines an enumeration for event statuses in a quest center.",
        "key_types": [
          "EventStatus"
        ],
        "functions": [],
        "imports": [],
        "complexity": "low"
      },
      "internal/enums/quest_center/log_param.go": {
        "language": "Go",
        "purpose": "Defines and manages log parameter types for a quest system.",
        "key_types": [
          "LogParamType"
        ],
        "functions": [
          "LogParamTypeFromStr",
          "Value",
          "Values",
          "IsValid"
        ],
        "imports": [
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/op_action_v2.go": {
        "language": "Go",
        "purpose": "Defines an enumeration for various quest actions in a game.",
        "key_types": [
          "OpAction"
        ],
        "functions": [
          "ActionFromString",
          "Value",
          "Values",
          "Scan"
        ],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/quest_pool.go": {
        "language": "Go",
        "purpose": "Defines a set of quest pool tiers and provides methods for handling them.",
        "key_types": [
          "QuestPoolTier"
        ],
        "functions": [
          "QuestPoolTierFromString",
          "Value",
          "Values",
          "IsValid",
          "Scan",
          "MarshalJSON",
          "UnmarshalJSON",
          "UseDynamicPoint"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/quest_status_v2.go": {
        "language": "Go",
        "purpose": "Defines various quest status enums and a state machine for managing quest states.",
        "key_types": [
          "QuestStatusV2",
          "QuestDisplayStatus",
          "PublishType",
          "OrderQuestBy",
          "OrderDirection",
          "QuestStateMachine"
        ],
        "functions": [
          "QuestStatusV2FromString",
          "QuestDisplayFromStr",
          "PublishTypeFromStr",
          "OrderQuestByFromStr",
          "OrderDirectionFromStr",
          "NewStateMachine",
          "GetState",
          "Transite"
        ],
        "imports": [
          "encoding/json",
          "errors",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/reward.go": {
        "language": "Go",
        "purpose": "Defines enums for reward distribution, resource types, reward types, and pool statuses with associated methods for validation and JSON marshaling/unmarshaling.",
        "key_types": [
          "RewardDistribution",
          "ResourceType",
          "RewardType",
          "PoolStatus"
        ],
        "functions": [
          "RewardDistributionFromStr",
          "IsValid",
          "Value",
          "Values",
          "MarshalJSON",
          "UnmarshalJSON",
          "Scan",
          "ResourceTypeFromStr",
          "RewardTypeFromStr",
          "PoolStatusFromStr"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/user.go": {
        "language": "Go",
        "purpose": "Defines user types for a quest center and provides methods for handling these types.",
        "key_types": [
          "UserType"
        ],
        "functions": [
          "UserTypeFromString",
          "Value",
          "Values",
          "IsValid",
          "Scan",
          "MarshalJSON",
          "UnmarshalJSON"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/user_quest_v2.go": {
        "language": "Go",
        "purpose": "Defines user quest statuses and filters for a quest system, including methods for serialization and validation.",
        "key_types": [
          "UserQuestStatus",
          "UserQuestFilter"
        ],
        "functions": [
          "UserQuestStatusFromStr",
          "UserQuestFilterFromStr",
          "Value",
          "Values",
          "IsValid",
          "MarshalJSON",
          "UnmarshalJSON",
          "Scan",
          "FallbackValue"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/user_reward_v2.go": {
        "language": "Go",
        "purpose": "Defines user reward statuses and provides methods for handling them.",
        "key_types": [
          "UserRewardStatus"
        ],
        "functions": [
          "UserRewardStatusFromStr",
          "Value",
          "Values",
          "MarshalJSON",
          "UnmarshalJSON",
          "Scan"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      },
      "internal/enums/quest_center/user_tier.go": {
        "language": "Go",
        "purpose": "Defines user tiers for a quest center and provides methods for handling user tier values.",
        "key_types": [
          "UserTier"
        ],
        "functions": [
          "UserTierFromString",
          "Value",
          "Values",
          "IsValid",
          "Scan",
          "MarshalJSON",
          "UnmarshalJSON"
        ],
        "imports": [
          "encoding/json",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums",
          "github.com/samber/lo"
        ],
        "complexity": "medium"
      }
    }
  }
}