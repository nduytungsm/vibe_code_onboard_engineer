{
  "content_hash": "dad9493b61742af3d931b58c1c05a022",
  "timestamp": "2025-09-26T13:35:08.938827+07:00",
  "result": {
    "path": "pkg/crypto/hmac",
    "purpose": "This folder/module is responsible for providing HMAC signing and validation functionalities, including configuration management and unit testing.",
    "languages": {
      "Go": 5
    },
    "key_modules": [
      "config.go",
      "funcs.go",
      "funcs_test.go",
      "hmac.go",
      "init.go"
    ],
    "dependencies": [
      "github.com/axieinfinity/ecosystem-go-common/hmac",
      "crypto/hmac",
      "crypto/sha256",
      "crypto/sha512",
      "encoding/base64",
      "errors",
      "fmt",
      "regexp",
      "sort",
      "strings",
      "testing",
      "time",
      "sync"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating HMAC-related functionalities into distinct files for configuration, signing, validation, and testing, promoting separation of concerns.",
    "file_summaries": {
      "pkg/crypto/hmac/config.go": {
        "language": "Go",
        "purpose": "Defines a configuration structure for HMAC with whitelisted addresses.",
        "key_types": [
          "Config"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ecosystem-go-common/hmac"
        ],
        "complexity": "low"
      },
      "pkg/crypto/hmac/funcs.go": {
        "language": "Go",
        "purpose": "Provides HMAC signing functions and parsing for authorization headers.",
        "key_types": [
          "map[string]string",
          "[]byte"
        ],
        "functions": [
          "SHA256",
          "SHA512",
          "Sign",
          "ParseAuthHeader"
        ],
        "imports": [
          "crypto/hmac",
          "crypto/sha256",
          "crypto/sha512",
          "encoding/base64",
          "errors",
          "fmt",
          "regexp",
          "sort",
          "strings"
        ],
        "side_effects": [
          "modifies input data during signing",
          "returns errors for invalid inputs"
        ],
        "risks": [
          "potential for signature forgery if secretKey is compromised"
        ],
        "complexity": "medium"
      },
      "pkg/crypto/hmac/funcs_test.go": {
        "language": "Go",
        "purpose": "Unit tests for HMAC signing functionality",
        "key_types": [
          "struct",
          "map",
          "string",
          "byte"
        ],
        "functions": [
          "TestSign"
        ],
        "imports": [
          "testing",
          "time"
        ],
        "complexity": "medium"
      },
      "pkg/crypto/hmac/hmac.go": {
        "language": "Go",
        "purpose": "Provides HMAC validation functionality including signature verification and clock skew validation.",
        "key_types": [
          "HMAC",
          "Config"
        ],
        "functions": [
          "New",
          "validateClockSkew",
          "ValidateSignature"
        ],
        "imports": [
          "encoding/base64",
          "errors",
          "fmt",
          "math",
          "net/http",
          "sort",
          "time"
        ],
        "side_effects": [
          "None"
        ],
        "risks": [
          "Potential for signature verification failure if clock skew is not handled properly"
        ],
        "complexity": "medium"
      },
      "pkg/crypto/hmac/init.go": {
        "language": "Go",
        "purpose": "This file initializes a singleton instance of the HMAC structure with a configuration.",
        "key_types": [
          "HMAC",
          "Config"
        ],
        "functions": [
          "init",
          "InitInstance"
        ],
        "imports": [
          "sync"
        ],
        "side_effects": [
          "Initializes a global instance of HMAC",
          "Sets global configuration"
        ],
        "risks": [
          "Potential race conditions if InitInstance is called concurrently without proper synchronization"
        ],
        "complexity": "medium"
      }
    }
  }
}