{
  "content_hash": "c50a98fd4d0e72ebc770806be9d399bb",
  "timestamp": "2025-09-26T13:12:57.39168+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines a repository interface and its implementation for managing user events in a database.",
    "key_types": [
      "UserEventRepo",
      "userEventRepo",
      "models.HistoryEntity",
      "models.UserEvent",
      "models.TempPremiumUser"
    ],
    "functions": [
      "NewUserEventRepo",
      "NewTx",
      "CreateHistory",
      "ListUserJoinedEvents",
      "FindUserEvent",
      "UpsertUserEvent",
      "FindEventUserByPool",
      "CountUserInEvent",
      "FindTempPremiumUser",
      "UpsertTempPremiumUser"
    ],
    "imports": [
      "context",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models",
      "gorm.io/gorm",
      "gorm.io/gorm/clause"
    ],
    "side_effects": [
      "Database transactions are performed which may modify the database state."
    ],
    "risks": [
      "Potential SQL injection if user input is not properly sanitized."
    ],
    "complexity": "medium"
  }
}