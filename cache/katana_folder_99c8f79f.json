{
  "content_hash": "b2918440802219dacba37e3c068fa116",
  "timestamp": "2025-09-26T13:31:39.131176+07:00",
  "result": {
    "path": "internal/infras/katana",
    "purpose": "This folder/module is responsible for interacting with the Katana API, handling token swaps, and managing quotes in a blockchain context.",
    "languages": {
      "Go": 3
    },
    "key_modules": [
      "client.go",
      "client_test.go",
      "models.go"
    ],
    "dependencies": [
      "github.com/samber/lo",
      "github.com/samber/mo",
      "go.uber.org/zap",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/axieinfinity/ronin-wallet-services/pkg/types",
      "github.com/shopspring/decimal",
      "github.com/test-go/testify/require",
      "github.com/ethereum/go-ethereum/common/hexutil"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating API client functionality, data models, and unit tests, promoting separation of concerns and testability.",
    "file_summaries": {
      "internal/infras/katana/client.go": {
        "language": "Go",
        "purpose": "This file defines a client for interacting with the Katana API, providing methods to retrieve quotes, tokens, and token prices.",
        "key_types": [
          "Config",
          "Client",
          "clientHTTP",
          "Quote",
          "PaginatedTokens",
          "Token",
          "Price",
          "ExchangeRateResponse"
        ],
        "functions": [
          "NewClient",
          "GetQuote",
          "GetTokens",
          "GetMainTokens",
          "GetTokenByAddress",
          "GetTokensPrice",
          "verifyChainIDs",
          "enrichToken",
          "roninTokenLogoUrl"
        ],
        "imports": [
          "context",
          "errors",
          "fmt",
          "net/http",
          "net/url",
          "strings",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/infras/katana/client_test.go": {
        "language": "Go",
        "purpose": "Unit test for the Katana client functionality",
        "key_types": [
          "Config",
          "Client",
          "GetQuoteRequest",
          "Protocol"
        ],
        "functions": [
          "TestKatanaClient",
          "NewClient",
          "GetQuote"
        ],
        "imports": [
          "context",
          "testing",
          "github.com/samber/mo",
          "github.com/shopspring/decimal",
          "github.com/test-go/testify/require",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/loggers",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "side_effects": [
          "Logs information about tokens and quotes"
        ],
        "complexity": "medium"
      },
      "internal/infras/katana/models.go": {
        "language": "Go",
        "purpose": "Defines data structures and methods for handling token swaps and quotes in a blockchain context.",
        "key_types": [
          "SwapType",
          "Protocol",
          "GetQuoteRequest",
          "CallData",
          "PoolReserve",
          "Route",
          "RouteToken",
          "Quote",
          "QuoteError",
          "ExplorerApiResult",
          "Paging",
          "PaginatedTokens",
          "Token",
          "Price",
          "ExchangeRateResponse",
          "DappOffchainToken",
          "DappOffchainResponse"
        ],
        "functions": [
          "tokenAddress",
          "AsQueryParams"
        ],
        "imports": [
          "strings",
          "github.com/ethereum/go-ethereum/common/hexutil",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "github.com/shopspring/decimal",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      }
    }
  }
}