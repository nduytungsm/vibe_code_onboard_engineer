{
  "content_hash": "8b51e5f483b7123ecfa0c62b63ec0c3d",
  "timestamp": "2025-09-25T18:24:04.925505+07:00",
  "result": {
    "language": "TypeScript",
    "purpose": "Defines a program context for managing imports and validating restricted imports in a Babel plugin.",
    "key_types": [
      "ProgramContext",
      "CompilerError",
      "EnvironmentConfig",
      "NonLocalImportSpecifier",
      "Result"
    ],
    "functions": [
      "validateRestrictedImports",
      "addImportsToProgram",
      "getExistingImports",
      "isHookName",
      "hasReference",
      "newUid",
      "addImportSpecifier",
      "assertGlobalBinding",
      "logEvent"
    ],
    "imports": [
      "@babel/core",
      "@babel/types",
      "@babel/traverse",
      "../CompilerError",
      "../HIR",
      "../Utils/utils",
      "../HIR/Environment",
      "../Utils/Result",
      "./Options",
      "./Program",
      "./Suppression"
    ],
    "side_effects": [
      "Modifies the program's import declarations based on the context and validation rules."
    ],
    "risks": [
      "Potential for conflicting import specifiers leading to runtime errors.",
      "Improper handling of restricted imports may lead to security vulnerabilities."
    ],
    "complexity": "medium"
  }
}