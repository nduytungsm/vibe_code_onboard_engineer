{
  "content_hash": "37665f9a2206f30ee6799b01438f4d80",
  "timestamp": "2025-09-24T15:47:52.401157+07:00",
  "result": {
    "path": "hclwrite",
    "purpose": "Responsible for defining and manipulating HCL (HashiCorp Configuration Language) files, including parsing, generating, and formatting HCL structures.",
    "languages": {
      "Go": 30
    },
    "key_modules": [
      "ast.go",
      "ast_attribute.go",
      "ast_block.go",
      "ast_body.go",
      "ast_expression.go",
      "parser.go",
      "public.go",
      "generate.go",
      "format.go"
    ],
    "dependencies": [
      "github.com/hashicorp/hcl/v2",
      "github.com/zclconf/go-cty/cty",
      "github.com/hashicorp/hcl/v2/hclsyntax",
      "github.com/google/go-cmp/cmp",
      "github.com/davecgh/go-spew/spew",
      "fmt",
      "strings",
      "bytes",
      "io",
      "sort",
      "math/big",
      "unicode",
      "unicode/utf8",
      "os",
      "testing"
    ],
    "architecture": "The folder follows a modular architecture pattern, organizing files by functionality related to HCL syntax tree manipulation, parsing, and formatting, with a focus on unit testing for each component.",
    "file_summaries": {
      "hclwrite/ast.go": {
        "language": "Go",
        "purpose": "Defines an abstract syntax tree (AST) for HCL (HashiCorp Configuration Language) files, allowing for the creation and manipulation of HCL file structures.",
        "key_types": [
          "File",
          "comments",
          "identifier",
          "number",
          "quoted"
        ],
        "functions": [
          "NewEmptyFile",
          "Body",
          "WriteTo",
          "Bytes",
          "newComments",
          "newIdentifier",
          "newNumber",
          "newQuoted"
        ],
        "imports": [
          "bytes",
          "io"
        ],
        "side_effects": [
          "Mutates the internal structure of the File when new content is added."
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_attribute.go": {
        "language": "Go",
        "purpose": "Defines an Attribute type for HCL (HashiCorp Configuration Language) with methods to initialize and manipulate it.",
        "key_types": [
          "Attribute",
          "Expression",
          "node"
        ],
        "functions": [
          "newAttribute",
          "init",
          "Expr",
          "setName"
        ],
        "imports": [
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "side_effects": [
          "Modifies the internal state of the Attribute instance",
          "Appends comments and tokens to the children of the Attribute"
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_block.go": {
        "language": "Go",
        "purpose": "Defines a structure for HCL blocks and provides methods to manipulate them.",
        "key_types": [
          "Block",
          "blockLabels"
        ],
        "functions": [
          "newBlock",
          "NewBlock",
          "init",
          "Body",
          "Type",
          "SetType",
          "Labels",
          "SetLabels",
          "labelsObj",
          "newBlockLabels",
          "Replace",
          "Current"
        ],
        "imports": [
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "side_effects": [
          "Modifies the internal state of Block and blockLabels objects when methods are called."
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_block_test.go": {
        "language": "Go",
        "purpose": "Unit tests for the HCL (HashiCorp Configuration Language) block parsing and manipulation functionality.",
        "key_types": [
          "struct",
          "Tokens"
        ],
        "functions": [
          "TestBlockType",
          "TestBlockLabels",
          "TestBlockSetType",
          "TestBlockSetLabels"
        ],
        "imports": [
          "fmt",
          "reflect",
          "strings",
          "testing",
          "github.com/davecgh/go-spew/spew",
          "github.com/google/go-cmp/cmp",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "side_effects": [
          "Logs diagnostic errors if parsing fails."
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_body.go": {
        "language": "Go",
        "purpose": "Defines a Body structure for managing HCL (HashiCorp Configuration Language) body content, including attributes and blocks.",
        "key_types": [
          "Body",
          "nodeSet",
          "Attribute",
          "Block",
          "node",
          "Tokens"
        ],
        "functions": [
          "newBody",
          "appendItem",
          "appendItemNode",
          "Clear",
          "AppendUnstructuredTokens",
          "Attributes",
          "Blocks",
          "GetAttribute",
          "getAttributeNode",
          "RenameAttribute",
          "FirstMatchingBlock",
          "RemoveBlock",
          "SetAttributeRaw",
          "SetAttributeValue",
          "SetAttributeTraversal",
          "RemoveAttribute",
          "AppendBlock",
          "AppendNewBlock",
          "AppendNewline"
        ],
        "imports": [
          "reflect",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "side_effects": [
          "Modifies the state of the Body by adding, removing, or updating attributes and blocks."
        ],
        "risks": [
          "Potential for nil pointer dereference if attributes or blocks are not properly checked before access."
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_body_test.go": {
        "language": "Go",
        "purpose": "Unit tests for the hclwrite package, specifically testing the body of HCL configurations.",
        "key_types": [
          "Tokens",
          "cty.Value"
        ],
        "functions": [
          "TestBodyGetAttribute",
          "TestBodyFirstMatchingBlock",
          "TestBodySetAttributeValue"
        ],
        "imports": [
          "fmt",
          "reflect",
          "strings",
          "testing",
          "github.com/davecgh/go-spew/spew",
          "github.com/google/go-cmp/cmp",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "side_effects": [
          "Logs diagnostic messages if parsing fails."
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_expression.go": {
        "language": "Go",
        "purpose": "Defines structures and functions for handling HCL expressions and traversals.",
        "key_types": [
          "Expression",
          "Traversal",
          "TraverseName",
          "TraverseIndex"
        ],
        "functions": [
          "newExpression",
          "NewExpressionRaw",
          "NewExpressionLiteral",
          "NewExpressionAbsTraversal",
          "Variables",
          "RenameVariablePrefix",
          "newTraversal",
          "newTraverseName",
          "newTraverseIndex"
        ],
        "imports": [
          "fmt",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "side_effects": [
          "Panic if invalid tokens are provided to NewExpressionRaw.",
          "Panic if an unknown value is passed to NewExpressionLiteral.",
          "Panic if a relative traversal is passed to NewExpressionAbsTraversal.",
          "Panic if search and replacement lengths do not match in RenameVariablePrefix."
        ],
        "complexity": "medium"
      },
      "hclwrite/ast_test.go": {
        "language": "Go",
        "purpose": "This file contains tests for the HCL write functionality, specifically for creating a test tree structure from nodes.",
        "key_types": [
          "TestTreeNode",
          "node"
        ],
        "functions": [
          "makeTestTree"
        ],
        "imports": [
          "fmt",
          "strings"
        ],
        "complexity": "medium"
      },
      "hclwrite/doc.go": {
        "language": "Go",
        "purpose": "This file provides functionality for generating and modifying HCL (HashiCorp Configuration Language) configurations.",
        "key_types": [
          "Node",
          "HCL",
          "Configuration"
        ],
        "functions": [
          "CreateNode",
          "InsertNode",
          "ModifyNode"
        ],
        "imports": [
          "hcl",
          "os",
          "fmt"
        ],
        "side_effects": [
          "Modifies HCL configurations",
          "Generates new HCL content"
        ],
        "risks": [
          "Potential for malformed HCL output",
          "Dependency on external libraries"
        ],
        "complexity": "medium"
      },
      "hclwrite/examples_test.go": {
        "language": "Go",
        "purpose": "This file contains tests for generating HCL (HashiCorp Configuration Language) configurations using the hclwrite package.",
        "key_types": [
          "hclwrite.File",
          "hclwrite.Body",
          "hclwrite.Block",
          "cty.Value",
          "hcl.Traversal"
        ],
        "functions": [
          "Example_generateFromScratch",
          "ExampleExpression_RenameVariablePrefix"
        ],
        "imports": [
          "fmt",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclwrite",
          "github.com/zclconf/go-cty/cty"
        ],
        "side_effects": [
          "Prints generated HCL configuration to standard output"
        ],
        "complexity": "medium"
      },
      "hclwrite/format.go": {
        "language": "Go",
        "purpose": "This file provides functionality to format HCL (HashiCorp Configuration Language) tokens by adjusting whitespace for canonical formatting.",
        "key_types": [
          "Tokens",
          "formatLine",
          "Token"
        ],
        "functions": [
          "format",
          "formatIndent",
          "formatSpaces",
          "formatCells",
          "spaceAfterToken"
        ],
        "imports": [
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "side_effects": [
          "Modifies the whitespace attributes of tokens in-place."
        ],
        "complexity": "medium"
      },
      "hclwrite/format_test.go": {
        "language": "Go",
        "purpose": "This file contains tests for formatting HCL (HashiCorp Configuration Language) code.",
        "key_types": [
          "struct",
          "Tokens",
          "formatLine",
          "Token"
        ],
        "functions": [
          "TestFormat",
          "TestLinesForFormat"
        ],
        "imports": [
          "fmt",
          "testing",
          "reflect",
          "github.com/davecgh/go-spew/spew",
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "complexity": "medium"
      },
      "hclwrite/generate.go": {
        "language": "Go",
        "purpose": "This file provides functions to generate HCL (HashiCorp Configuration Language) tokens for various types of values and expressions.",
        "key_types": [
          "Tokens",
          "cty.Value",
          "hcl.Traversal",
          "ObjectAttrTokens"
        ],
        "functions": [
          "TokensForValue",
          "TokensForTraversal",
          "TokensForIdentifier",
          "TokensForTuple",
          "TokensForObject",
          "TokensForFunctionCall",
          "appendTokensForValue",
          "appendTokensForTraversal",
          "appendTokensForTraversalStep"
        ],
        "imports": [
          "fmt",
          "unicode",
          "unicode/utf8",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "side_effects": [
          "Panic if given value is unknown or contains unknown values in TokensForValue",
          "Panic if given value is a capsule type in TokensForValue"
        ],
        "complexity": "medium"
      },
      "hclwrite/generate_test.go": {
        "language": "Go",
        "purpose": "Unit tests for generating tokens from HCL values and traversals.",
        "key_types": [
          "cty.Value",
          "Tokens",
          "hcl.Traversal"
        ],
        "functions": [
          "TestTokensForValue",
          "TestTokensForTraversal"
        ],
        "imports": [
          "bytes",
          "math/big",
          "sort",
          "testing",
          "github.com/google/go-cmp/cmp",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "complexity": "medium"
      },
      "hclwrite/native_node_sorter.go": {
        "language": "Go",
        "purpose": "Defines a sorter for HCL syntax nodes based on their byte range.",
        "key_types": [
          "nativeNodeSorter",
          "hclsyntax.Node"
        ],
        "functions": [
          "Len",
          "Less",
          "Swap"
        ],
        "imports": [
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "complexity": "medium"
      },
      "hclwrite/node.go": {
        "language": "Go",
        "purpose": "This file defines a structure for nodes in an Abstract Syntax Tree (AST) and provides methods for manipulating these nodes.",
        "key_types": [
          "node",
          "nodeContent",
          "nodes",
          "nodeSet",
          "inTree",
          "leafNode"
        ],
        "functions": [
          "newNode",
          "Equal",
          "BuildTokens",
          "Detach",
          "ReplaceWith",
          "assertUnattached",
          "Append",
          "AppendNode",
          "Insert",
          "InsertNode",
          "AppendUnstructuredTokens",
          "FindNodeWithContent",
          "newNodeSet",
          "Has",
          "Add",
          "Remove",
          "Clear",
          "List",
          "internalWalkFunc",
          "newInTree",
          "walkChildNodes"
        ],
        "imports": [
          "fmt",
          "github.com/google/go-cmp/cmp"
        ],
        "side_effects": [
          "Panic if attempting to replace a node not in a list",
          "Panic if attempting to attach an already-attached node"
        ],
        "complexity": "medium"
      },
      "hclwrite/parser.go": {
        "language": "Go",
        "purpose": "This file implements a parser that utilizes the HCL syntax parser to manage and transform HCL configurations.",
        "key_types": [
          "File",
          "inputTokens",
          "node",
          "Body",
          "Attribute",
          "Block"
        ],
        "functions": [
          "parse",
          "Partition",
          "PartitionType",
          "PartitionTypeOk",
          "PartitionTypeSingle",
          "PartitionIncludingComments",
          "PartitionBlockItem",
          "PartitionLeadComments",
          "PartitionLineEndTokens",
          "Slice",
          "Len",
          "Tokens",
          "Types",
          "parseBody",
          "parseBodyItem",
          "parseAttribute",
          "parseBlock"
        ],
        "imports": [
          "fmt",
          "sort",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax",
          "github.com/zclconf/go-cty/cty"
        ],
        "complexity": "high"
      },
      "hclwrite/parser_test.go": {
        "language": "Go",
        "purpose": "Unit tests for parsing HCL (HashiCorp Configuration Language) syntax.",
        "key_types": [
          "TestTreeNode"
        ],
        "functions": [
          "TestParse"
        ],
        "imports": [
          "fmt",
          "testing",
          "github.com/davecgh/go-spew/spew",
          "github.com/google/go-cmp/cmp",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "complexity": "medium"
      },
      "hclwrite/public.go": {
        "language": "Go",
        "purpose": "This file provides functionality to create and manipulate HCL (HashiCorp Configuration Language) files.",
        "key_types": [
          "File",
          "Body"
        ],
        "functions": [
          "NewFile",
          "ParseConfig",
          "Format"
        ],
        "imports": [
          "bytes",
          "github.com/hashicorp/hcl/v2"
        ],
        "side_effects": [
          "Modifies the internal representation of HCL files",
          "Writes formatted output to a buffer"
        ],
        "risks": [
          "Potential for malformed HCL leading to runtime errors",
          "Ignoring syntax errors may lead to undesirable output"
        ],
        "complexity": "medium"
      },
      "hclwrite/round_trip_test.go": {
        "language": "Go",
        "purpose": "This file contains tests for round-trip parsing and formatting of HCL (HashiCorp Configuration Language) files.",
        "key_types": [
          "hcl.File",
          "hcl.EvalContext",
          "cty.Value"
        ],
        "functions": [
          "TestRoundTripVerbatim",
          "TestRoundTripFormat",
          "TestRoundTripSafeConcurrent"
        ],
        "imports": [
          "bytes",
          "testing",
          "github.com/google/go-cmp/cmp",
          "github.com/zclconf/go-cty/cty",
          "github.com/zclconf/go-cty/cty/function",
          "github.com/zclconf/go-cty/cty/function/stdlib",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "side_effects": [
          "Logs diagnostic messages if parsing or evaluation fails.",
          "Concurrent modification of HCL file structure in tests."
        ],
        "risks": [
          "Potential data races when running tests concurrently without proper synchronization."
        ],
        "complexity": "medium"
      },
      "hclwrite/tokens.go": {
        "language": "Go",
        "purpose": "This file defines structures and methods for handling tokens in HCL (HashiCorp Configuration Language) for code generation.",
        "key_types": [
          "Token",
          "Tokens",
          "ObjectAttrTokens"
        ],
        "functions": [
          "asHCLSyntax",
          "Bytes",
          "testValue",
          "Columns",
          "WriteTo",
          "walkChildNodes",
          "BuildTokens",
          "newIdentToken"
        ],
        "imports": [
          "bytes",
          "io",
          "github.com/apparentlymart/go-textseg/v15/textseg",
          "github.com/hashicorp/hcl/v2",
          "github.com/hashicorp/hcl/v2/hclsyntax"
        ],
        "side_effects": [
          "Writes token bytes to an io.Writer"
        ],
        "complexity": "medium"
      }
    }
  }
}