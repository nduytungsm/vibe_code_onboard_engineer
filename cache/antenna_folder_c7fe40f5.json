{
  "content_hash": "cf1738c2788cb4da8ac26e6cc68941d2",
  "timestamp": "2025-09-26T13:40:23.885427+07:00",
  "result": {
    "path": "cmd/antenna",
    "purpose": "Responsible for the Antenna application, including configuration, routing, and dependency injection.",
    "languages": {
      "Go": 5
    },
    "key_modules": [
      "config.go",
      "main.go",
      "routes.go",
      "wire.go",
      "wire_gen.go"
    ],
    "dependencies": [
      "github.com/axieinfinity/ronin-wallet-services/internal/applications",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/consumers",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/services",
      "github.com/axieinfinity/ronin-wallet-services/internal/infras/exchangerate",
      "github.com/axieinfinity/ronin-wallet-services/internal/infras/pushnotification",
      "github.com/axieinfinity/ronin-wallet-services/internal/infras/skynet",
      "github.com/axieinfinity/ronin-wallet-services/internal/infras/walletmanager",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/axieinfinity/ronin-wallet-services/pkg/loggers",
      "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
      "github.com/axieinfinity/ronin-wallet-services/pkg/redis",
      "github.com/axieinfinity/ronin-wallet-services/pkg/sarama-kafka",
      "github.com/go-playground/validator/v10",
      "github.com/google/wire",
      "github.com/labstack/echo/v4/middleware",
      "github.com/redis/go-redis/v9",
      "go.uber.org/zap"
    ],
    "architecture": "The folder follows a modular architecture pattern, utilizing dependency injection for managing application components and services.",
    "file_summaries": {
      "cmd/antenna/config.go": {
        "language": "Go",
        "purpose": "Defines a configuration structure for the application with various required components.",
        "key_types": [
          "config",
          "applications.ApplicationConfig",
          "loggers.LoggerConfig",
          "xhttp.ServerConfig",
          "kafka.ConsumerConfig",
          "pushnotification.ProducerConfig",
          "services.CheckpointServiceConfig",
          "consumers.NotificationFilterConfig",
          "skynet.Config",
          "walletmanager.Config",
          "exchangerate.Config",
          "redis.Redis",
          "metrics.Config"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/applications",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/consumers",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/services",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/exchangerate",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/pushnotification",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/skynet",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/walletmanager",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/loggers",
          "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
          "github.com/axieinfinity/ronin-wallet-services/pkg/redis",
          "github.com/axieinfinity/ronin-wallet-services/pkg/sarama-kafka"
        ],
        "complexity": "medium"
      },
      "cmd/antenna/main.go": {
        "language": "Go",
        "purpose": "This file is the main entry point for the Antenna application, handling configuration loading, validation, logging, and application startup.",
        "key_types": [
          "config",
          "logger",
          "context"
        ],
        "functions": [
          "main",
          "NewConfig",
          "Struct",
          "MustNewLogger",
          "Start"
        ],
        "imports": [
          "context",
          "log",
          "github.com/go-playground/validator/v10",
          "github.com/axieinfinity/ronin-wallet-services/pkg/configs",
          "github.com/axieinfinity/ronin-wallet-services/pkg/loggers"
        ],
        "side_effects": [
          "Logs configuration loading and application startup",
          "Creates a context for managing application lifecycle"
        ],
        "risks": [
          "Potential for logging sensitive configuration details",
          "Error handling may expose application state"
        ],
        "complexity": "medium"
      },
      "cmd/antenna/routes.go": {
        "language": "Go",
        "purpose": "Defines route handlers for private and public groups in an API.",
        "key_types": [
          "PrivateGroup",
          "PublicGroup"
        ],
        "functions": [
          "NewPrivateGroup"
        ],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/pkg/http"
        ],
        "complexity": "low"
      },
      "cmd/antenna/wire.go": {
        "language": "Go",
        "purpose": "This file sets up dependency injection for the Antenna application using Google Wire.",
        "key_types": [
          "applications.Application",
          "consumers.BlockFullEventHandler",
          "services.TransferDecoder",
          "services.NotificationService",
          "services.CheckpointService",
          "services.SkynetTokenService",
          "deceptionSvc.DeceptionTokenService",
          "xhttp.Server",
          "metrics.Service",
          "kafka.Consumer"
        ],
        "functions": [
          "wireAntennaApp",
          "provideBlockFullConsumer",
          "provideNotificationProducer",
          "provideMetricsService",
          "provideHttpServer",
          "provideServices"
        ],
        "imports": [
          "time",
          "github.com/google/wire",
          "github.com/labstack/echo/v4/middleware",
          "github.com/redis/go-redis/v9",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/internal/applications",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/consumers",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/models",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/services",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/deception/services",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/exchangerate",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/pushnotification",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/skynet",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/walletmanager",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
          "github.com/axieinfinity/ronin-wallet-services/pkg/redis",
          "github.com/axieinfinity/ronin-wallet-services/pkg/sarama-kafka",
          "github.com/axieinfinity/ronin-wallet-services/pkg/validation"
        ],
        "side_effects": [
          "Creates and configures various services and components for the application."
        ],
        "complexity": "medium"
      },
      "cmd/antenna/wire_gen.go": {
        "language": "Go",
        "purpose": "This file generates dependency injection code for the antenna application using Wire.",
        "key_types": [
          "applications.Application",
          "services.TransferDecoder",
          "walletmanager.Client",
          "skynet.Client",
          "services.CheckpointService",
          "services.NotificationService",
          "kafka.Consumer",
          "metrics.Service"
        ],
        "functions": [
          "wireAntennaApp",
          "provideBlockFullConsumer",
          "provideNotificationProducer",
          "provideMetricsService",
          "provideHttpServer",
          "provideServices"
        ],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/applications",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/consumers",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/models",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/antenna/services",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/deception/services",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/exchangerate",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/pushnotification",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/skynet",
          "github.com/axieinfinity/ronin-wallet-services/internal/infras/walletmanager",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
          "github.com/axieinfinity/ronin-wallet-services/pkg/redis",
          "github.com/axieinfinity/ronin-wallet-services/pkg/sarama-kafka",
          "github.com/axieinfinity/ronin-wallet-services/pkg/validation",
          "github.com/labstack/echo/v4/middleware",
          "github.com/redis/go-redis/v9",
          "go.uber.org/zap",
          "time"
        ],
        "complexity": "medium"
      }
    }
  }
}