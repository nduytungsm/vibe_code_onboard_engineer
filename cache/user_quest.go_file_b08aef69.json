{
  "content_hash": "91879125d0007ceaeaed4facca56a5a8",
  "timestamp": "2025-09-26T13:12:51.167206+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines a repository interface and its implementation for managing user quests in a database.",
    "key_types": [
      "UserQuestRepo",
      "userQuestRepo",
      "models.UserQuestEntity",
      "models.UserActionEntity",
      "models.UserRewardEntity",
      "models.UserSkipQuestLog",
      "models.QuestWhitelistEntity"
    ],
    "functions": [
      "NewUserQuestRepo",
      "FindAuditResult",
      "NewTx",
      "ListUserQuestIDs",
      "FindSingleUserQuest",
      "CreateUserQuestInfo",
      "CreateUserActions",
      "CreateUserRewards",
      "FindActiveActions",
      "FindActiveRewards",
      "FindWhitelist",
      "UpdateUserQuestInfo",
      "FilterUserQuests"
    ],
    "imports": [
      "context",
      "fmt",
      "strings",
      "go.uber.org/zap",
      "gorm.io/gorm",
      "gorm.io/gorm/clause",
      "github.com/axieinfinity/ronin-wallet-services/internal/enums/quest_center",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models"
    ],
    "side_effects": [
      "Database transactions may modify the state of the database.",
      "Logging actions may produce output to logging systems."
    ],
    "risks": [
      "Potential SQL injection if user input is not properly sanitized.",
      "Error handling may expose sensitive information if not managed correctly."
    ],
    "complexity": "medium"
  }
}