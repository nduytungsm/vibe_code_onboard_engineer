{
  "content_hash": "d263c70d01fcb60303a2fc3c62fddae6",
  "timestamp": "2025-09-26T12:27:28.305202+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines an interface and implementation for managing event-related database operations.",
    "key_types": [
      "EventRepo",
      "evRepo",
      "models.Event",
      "models.HistoryEntity"
    ],
    "functions": [
      "NewTx",
      "Upsert",
      "GetByID",
      "GetOngoingEvent",
      "ListEvents",
      "CreateHistory",
      "FindPoolEvent",
      "FindEventByQuest",
      "IncreaseEventUserCount"
    ],
    "imports": [
      "context",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models",
      "github.com/axieinfinity/ronin-wallet-services/pkg/helper",
      "gorm.io/gorm",
      "gorm.io/gorm/clause"
    ],
    "side_effects": [
      "Database transactions are performed which may modify the state of the database."
    ],
    "risks": [
      "Potential SQL injection if user input is not properly sanitized."
    ],
    "complexity": "medium"
  }
}