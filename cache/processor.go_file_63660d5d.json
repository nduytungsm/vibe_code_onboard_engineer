{
  "content_hash": "b0503b542dfb0ebf1da858dd60f01f59",
  "timestamp": "2025-09-26T13:26:45.261387+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file implements a reward distribution processor that handles reward distribution tasks using asynchronous processing.",
    "key_types": [
      "RewardPoolConfig",
      "ProcessorConfig",
      "tokenOrder",
      "createRewardOrdersReq",
      "rewardDistributeProcessor"
    ],
    "functions": [
      "NewRewardDistributeProcessor",
      "ProcessTask",
      "ProvideRedisClientOpt"
    ],
    "imports": [
      "context",
      "time",
      "github.com/google/wire",
      "github.com/hibiken/asynq",
      "github.com/prometheus/client_golang/prometheus",
      "github.com/shopspring/decimal",
      "go.uber.org/zap",
      "github.com/axieinfinity/ronin-wallet-services/pkg/async-queue",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
      "github.com/axieinfinity/ronin-wallet-services/pkg/storages"
    ],
    "side_effects": [
      "Records the latency of processing reward distribution tasks"
    ],
    "risks": [
      "Potential exposure of sensitive information due to redacted fields"
    ],
    "complexity": "medium"
  }
}