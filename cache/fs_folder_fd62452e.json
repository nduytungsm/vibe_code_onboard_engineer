{
  "content_hash": "603ff8e16d85e54dd3b3f11f3f7bbbb1",
  "timestamp": "2025-09-25T17:45:06.504218+07:00",
  "result": {
    "path": "internal/fs",
    "purpose": "Implements a custom file system that wraps an existing http.FileSystem and provides unit tests for its abstraction.",
    "languages": {
      "Go": 2
    },
    "key_modules": [
      "fs.go",
      "fs_test.go"
    ],
    "dependencies": [
      "github.com/stretchr/testify/assert",
      "github.com/stretchr/testify/require"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating file system functionality and its tests in separate files.",
    "file_summaries": {
      "internal/fs/fs.go": {
        "language": "Go",
        "purpose": "Implements a custom file system that wraps an existing http.FileSystem.",
        "key_types": [
          "FileSystem"
        ],
        "functions": [
          "Open"
        ],
        "imports": [
          "io/fs",
          "net/http"
        ],
        "complexity": "low"
      },
      "internal/fs/fs_test.go": {
        "language": "Go",
        "purpose": "Unit tests for a file system abstraction using a mock file system.",
        "key_types": [
          "mockFileSystem",
          "FileSystem"
        ],
        "functions": [
          "Open",
          "TestFileSystem_Open",
          "TestFileSystem_Open_err"
        ],
        "imports": [
          "errors",
          "net/http",
          "os",
          "testing",
          "github.com/stretchr/testify/assert",
          "github.com/stretchr/testify/require"
        ],
        "complexity": "medium"
      }
    }
  }
}