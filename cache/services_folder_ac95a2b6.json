{
  "content_hash": "00e8b1c302dddaa1e7b2bb0e651aa7d9",
  "timestamp": "2025-09-26T13:37:29.010209+07:00",
  "result": {
    "path": "internal/domains/bridge/services",
    "purpose": "This folder/module is responsible for providing a bridge service that interacts with various providers to get information about supported chains, tokens, and quotes for transactions.",
    "languages": {
      "Go": 1
    },
    "key_modules": [
      "bridge.go"
    ],
    "dependencies": [
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
      "github.com/samber/lo",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/bridge/handlers/dtos",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/bridge/services/providers",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/dex/services",
      "github.com/axieinfinity/ronin-wallet-services/internal/enums/bridge",
      "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
      "github.com/axieinfinity/ronin-wallet-services/internal/routers/middlewares",
      "github.com/axieinfinity/ronin-wallet-services/pkg/helper",
      "go.uber.org/zap"
    ],
    "architecture": "The folder follows a service-oriented architecture pattern, encapsulating the bridge service logic and its interactions with external providers.",
    "file_summaries": {
      "internal/domains/bridge/services/bridge.go": {
        "language": "Go",
        "purpose": "This file defines a bridge service that interacts with various providers to get information about supported chains, tokens, and quotes for transactions.",
        "key_types": [
          "BridgeService",
          "bridgeService",
          "dtos.Provider",
          "dtos.Token",
          "dtos.BestQuoteResponse",
          "dtos.FeeBalance"
        ],
        "functions": [
          "NewBridgeService",
          "wrapErr",
          "GetProvidersInfo",
          "GetProviderTokens",
          "FindBestQuote",
          "isChainSupported",
          "findProviderByID",
          "GetFeeBalance"
        ],
        "imports": [
          "context",
          "errors",
          "fmt",
          "maps",
          "net/http",
          "runtime",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
          "github.com/samber/lo",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/bridge/handlers/dtos",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/bridge/services/providers",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/dex/services",
          "github.com/axieinfinity/ronin-wallet-services/internal/enums/bridge",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/middlewares",
          "github.com/axieinfinity/ronin-wallet-services/pkg/helper",
          "go.uber.org/zap"
        ],
        "side_effects": [
          "Logs errors when wrapping errors",
          "Interacts with external providers to fetch data"
        ],
        "risks": [
          "Potential for nil pointer dereference if providers are not properly initialized",
          "Error handling may expose internal error messages"
        ],
        "complexity": "medium"
      }
    }
  }
}