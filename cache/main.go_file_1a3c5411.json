{
  "content_hash": "5428736fd288f44d0cdec43fb62ed87d",
  "timestamp": "2025-09-26T09:59:19.685553+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file contains a main function that initializes Sentry for error tracking, connects to a PostgreSQL database, and cleans old special offers from an announcement repository based on a specified time period.",
    "key_types": [
      "context.Context",
      "time.Time",
      "gorm.DB",
      "config.Config",
      "repositories.AnnouncementRepo"
    ],
    "functions": [
      "main",
      "sentry.Init",
      "postgresql.NewClient",
      "repositories.NewAnnouncementRepo",
      "announcementRepo.ClearSpecialOffers"
    ],
    "imports": [
      "context",
      "time",
      "github.com/axieinfinity/ecosystem-go-common/database/postgresql",
      "github.com/getsentry/sentry-go",
      "github.com/rs/zerolog/log",
      "gorm.io/gorm",
      "github.com/axieinfinity/ronin-wallet-manager/config",
      "github.com/axieinfinity/ronin-wallet-manager/repositories"
    ],
    "side_effects": [
      "Initializes Sentry for error tracking",
      "Connects to a PostgreSQL database",
      "Modifies the database by clearing old special offers"
    ],
    "risks": [
      "Potential database connection failure",
      "Error handling may not cover all edge cases",
      "Sentry initialization failure may go unnoticed"
    ],
    "complexity": "medium"
  }
}