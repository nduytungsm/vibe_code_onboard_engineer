{
  "content_hash": "02d7fb5879b67632072c7489a64bf581",
  "timestamp": "2025-09-26T13:33:59.730783+07:00",
  "result": {
    "path": "pkg/async-queue",
    "purpose": "Responsible for implementing an asynchronous queue system using Redis, including client interactions, task processing, metrics tracking, and rate limiting.",
    "languages": {
      "Go": 5
    },
    "key_modules": [
      "client.go",
      "metrics.go",
      "rate_limit.go",
      "server.go",
      "task.go"
    ],
    "dependencies": [
      "github.com/hibiken/asynq",
      "github.com/axieinfinity/ronin-wallet-services/pkg/redis",
      "github.com/prometheus/client_golang/prometheus",
      "github.com/prometheus/client_golang/prometheus/promauto",
      "github.com/hibiken/asynqmon",
      "github.com/labstack/echo/v4",
      "go.uber.org/zap",
      "golang.org/x/sync/errgroup",
      "golang.org/x/time/rate"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating functionalities related to asynchronous queue operations, with clear separation of concerns for client handling, task processing, metrics, and rate limiting.",
    "file_summaries": {
      "pkg/async-queue/client.go": {
        "language": "Go",
        "purpose": "Defines a client for interacting with an asynchronous queue using Redis.",
        "key_types": [
          "ClientConfig",
          "ClientConfigV2"
        ],
        "functions": [
          "NewClient",
          "NewClientV2"
        ],
        "imports": [
          "github.com/hibiken/asynq",
          "github.com/axieinfinity/ronin-wallet-services/pkg/redis"
        ],
        "complexity": "medium"
      },
      "pkg/async-queue/metrics.go": {
        "language": "Go",
        "purpose": "This file defines a middleware for tracking metrics related to task processing in an asynchronous queue.",
        "key_types": [
          "asynq.Handler",
          "asynq.Task",
          "prometheus.CounterVec",
          "prometheus.GaugeVec"
        ],
        "functions": [
          "createMetricsMiddleware"
        ],
        "imports": [
          "context",
          "github.com/hibiken/asynq",
          "github.com/prometheus/client_golang/prometheus",
          "github.com/prometheus/client_golang/prometheus/promauto"
        ],
        "side_effects": [
          "Modifies metrics counters and gauges based on task processing outcomes."
        ],
        "complexity": "medium"
      },
      "pkg/async-queue/rate_limit.go": {
        "language": "Go",
        "purpose": "Implements rate limiting for asynchronous task handling.",
        "key_types": [
          "RateLimitError",
          "asynq.Task",
          "rate.Limiter"
        ],
        "functions": [
          "Error",
          "IsRateLimitError",
          "retryDelay",
          "HandlerWithLimit"
        ],
        "imports": [
          "errors",
          "fmt",
          "math/rand/v2",
          "time",
          "github.com/hibiken/asynq",
          "golang.org/x/time/rate"
        ],
        "side_effects": [
          "Uses random number generation for retry delay."
        ],
        "risks": [
          "Potential use of insecure random number generation."
        ],
        "complexity": "medium"
      },
      "pkg/async-queue/server.go": {
        "language": "Go",
        "purpose": "This file implements an asynchronous queue server and monitor using the asynq library.",
        "key_types": [
          "ServerConfig",
          "TaskMonitorConfig",
          "RedisConfig",
          "ServerConfigV2",
          "Server"
        ],
        "functions": [
          "NewAsyncQueueServer",
          "NewAsyncQueueMonitor",
          "newAsyncQueueServer",
          "newAsyncQueueMonitor",
          "NewServer",
          "Register",
          "Start",
          "Stop"
        ],
        "imports": [
          "context",
          "fmt",
          "net/http",
          "time",
          "github.com/hibiken/asynq",
          "github.com/hibiken/asynqmon",
          "github.com/labstack/echo/v4",
          "go.uber.org/zap",
          "golang.org/x/sync/errgroup",
          "github.com/axieinfinity/ronin-wallet-services/pkg/redis"
        ],
        "side_effects": [
          "Starts HTTP server for monitoring tasks",
          "Starts asynchronous task processing server"
        ],
        "risks": [
          "Potential exposure of sensitive Redis credentials if not properly managed"
        ],
        "complexity": "medium"
      },
      "pkg/async-queue/task.go": {
        "language": "Go",
        "purpose": "Defines a TaskHandler interface for processing tasks in an asynchronous queue.",
        "key_types": [
          "TaskHandler"
        ],
        "functions": [
          "TaskType",
          "ProcessTask"
        ],
        "imports": [
          "context",
          "github.com/hibiken/asynq"
        ],
        "complexity": "low"
      }
    }
  }
}