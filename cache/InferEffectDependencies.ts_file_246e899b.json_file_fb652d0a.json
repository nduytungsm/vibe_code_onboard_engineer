{
  "content_hash": "56fe3c22d5f2f2253ae303adc42656eb",
  "timestamp": "2025-09-25T18:24:07.987145+07:00",
  "result": {
    "language": "TypeScript",
    "purpose": "Infers reactive dependencies captured by useEffect lambdas and adds them as a second argument to the useEffect call if no dependency array is provided.",
    "key_types": [
      "HIRFunction",
      "IdentifierId",
      "TInstruction",
      "ReactiveScopeDependencies",
      "BasicBlock",
      "ArrayExpression",
      "Place"
    ],
    "functions": [
      "inferEffectDependencies",
      "getOrInsertWith",
      "inferReactiveIdentifiers",
      "inferMinimalDependencies",
      "buildDependencyInstructions",
      "collectDepUsages"
    ],
    "imports": [
      "@babel/types",
      "..",
      "../HIR",
      "../HIR/CollectHoistablePropertyLoads",
      "../HIR/CollectOptionalChainDependencies",
      "../HIR/DeriveMinimalDependenciesHIR",
      "../HIR/Environment",
      "../HIR/HIRBuilder",
      "../HIR/PropagateScopeDependenciesHIR",
      "../HIR/ScopeDependencyUtils",
      "../HIR/visitors",
      "../Utils/Stack",
      "../Utils/utils",
      "../Optimization"
    ],
    "side_effects": [
      "Modifies the function's effect dependencies based on inferred values."
    ],
    "complexity": "high"
  }
}