{
  "content_hash": "a4822e6391a7cc8898c7b1201bd5818a",
  "timestamp": "2025-09-26T11:53:26.741456+07:00",
  "result": {
    "path": "repositories",
    "purpose": "This folder contains repository definitions for managing various entities in a database, including announcements, code versions, contracts, decentralized applications (DApps), highlights, networks, user preferences, and trusted domains.",
    "languages": {
      "Go": 12
    },
    "key_modules": [
      "announcement.go",
      "code_version.go",
      "common.go",
      "contract.go",
      "dapp.go",
      "highlight.go",
      "init.go",
      "network.go",
      "preference.go",
      "quickaccess.go",
      "trusted_domain.go"
    ],
    "dependencies": [
      "gorm.io/gorm",
      "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
      "github.com/axieinfinity/ronin-wallet-manager/models",
      "github.com/axieinfinity/ronin-wallet-manager/pkg/helper",
      "github.com/axieinfinity/ecosystem-go-common/errors"
    ],
    "architecture": "The folder follows a repository pattern, encapsulating data access logic and providing a clean API for interacting with the database, while ensuring separation of concerns.",
    "file_summaries": {
      "repositories/announcement.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing announcements, including CRUD operations and special offer logs.",
        "key_types": [
          "AnnouncementRepo",
          "announcementRepo",
          "AnnouncementInfo"
        ],
        "functions": [
          "AddNew",
          "MarkPublished",
          "GetAnnouncementByID",
          "GetAnnouncementsListAsAdmin",
          "GetAnnouncementsListAsUser",
          "GetOldPublished",
          "CountAnnouncements",
          "DeleteAnnouncement",
          "GetSpecialOfferLog",
          "SaveSendSpecialOfferLog",
          "GetSpecialOfferLogsList",
          "CountSpecialOffers"
        ],
        "imports": [
          "context",
          "errors",
          "slices",
          "time",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "github.com/axieinfinity/ronin-wallet-manager/models",
          "github.com/axieinfinity/ronin-wallet-manager/pkg/helper"
        ],
        "side_effects": [
          "Database transactions for creating, updating, and deleting announcements and special offers."
        ],
        "complexity": "medium"
      },
      "repositories/code_version.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing code versions in a database.",
        "key_types": [
          "CodeVersionRepo",
          "codeVersionRepo",
          "gorm.DB"
        ],
        "functions": [
          "GetAllCodeVersions",
          "SaveVersion",
          "NewCodeVersionRepo"
        ],
        "imports": [
          "context",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are initiated and may modify the database state."
        ],
        "risks": [
          "Potential SQL injection if inputs are not properly sanitized.",
          "Error handling may expose sensitive information."
        ],
        "complexity": "medium"
      },
      "repositories/common.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing common entities in a database.",
        "key_types": [
          "CommonRepo",
          "commonRepo",
          "gorm.DB",
          "context.Context"
        ],
        "functions": [
          "GetAllCommons",
          "SaveCommons",
          "NewCommonRepo"
        ],
        "imports": [
          "context",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are performed which may modify the state of the database."
        ],
        "risks": [
          "Potential SQL injection if inputs are not properly sanitized.",
          "Data loss if overwriteOnConflict is true and not handled correctly."
        ],
        "complexity": "medium"
      },
      "repositories/contract.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing contract data in a database.",
        "key_types": [
          "ContractRepo",
          "contractRepo",
          "md.Contract",
          "md.ContractFilter",
          "md.ContractOrderBy",
          "md.Paging"
        ],
        "functions": [
          "GetContract",
          "GetContractList",
          "CreateContract",
          "DeleteContract",
          "UpdateContract",
          "SaveContract",
          "UpdateContracts",
          "SaveContracts",
          "NewContractRepo"
        ],
        "imports": [
          "context",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ecosystem-go-common/errors",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are initiated and may modify the database state."
        ],
        "risks": [
          "Potential SQL injection if filter conditions are not properly sanitized.",
          "Panic calls in unimplemented methods could lead to application crashes."
        ],
        "complexity": "medium"
      },
      "repositories/dapp.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing decentralized applications (DApps) in a database.",
        "key_types": [
          "DAppRepo",
          "dAppRepo",
          "DApp",
          "DAppFilter",
          "DAppOrderBy",
          "Paging"
        ],
        "functions": [
          "GetDApp",
          "GetDAppList",
          "CreateDApp",
          "DeleteDApp",
          "UpdateDApp",
          "SaveDApp",
          "UpdateDApps",
          "SaveDApps",
          "NewDAppRepo"
        ],
        "imports": [
          "context",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ecosystem-go-common/errors",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database operations such as create, update, delete on DApps."
        ],
        "risks": [
          "Potential SQL injection if filter conditions are not properly sanitized.",
          "Error handling may expose internal error messages."
        ],
        "complexity": "medium"
      },
      "repositories/highlight.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing highlights in a database using GORM.",
        "key_types": [
          "HighlightRepo",
          "highlightRepo",
          "md.Highlight",
          "md.Paging"
        ],
        "functions": [
          "GetList",
          "Save",
          "SaveBatch",
          "Update",
          "UpdateBatch",
          "GetByID",
          "GetAll",
          "DeleteByID",
          "GetHighlightDApps",
          "CleanExpired",
          "NewHighlightRepo"
        ],
        "imports": [
          "context",
          "time",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are performed which may modify the state of the database."
        ],
        "risks": [
          "Potential SQL injection if inputs are not properly sanitized.",
          "Data integrity issues if concurrent updates are not handled correctly."
        ],
        "complexity": "medium"
      },
      "repositories/init.go": {
        "language": "Go",
        "purpose": "Provides pagination functionality for database queries using GORM.",
        "key_types": [
          "int",
          "gorm.DB"
        ],
        "functions": [
          "paginate"
        ],
        "imports": [
          "gorm.io/gorm"
        ],
        "side_effects": [
          "Modifies database query parameters based on pagination logic."
        ],
        "complexity": "medium"
      },
      "repositories/network.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing network entities in a database.",
        "key_types": [
          "NetworkRepo",
          "networkRepo",
          "Network",
          "NetworkFilter",
          "NetworkOrderBy",
          "Paging",
          "Preload"
        ],
        "functions": [
          "GetNetwork",
          "GetNetworkList",
          "CreateNetwork",
          "DeleteNetwork",
          "UpdateNetwork",
          "SaveNetwork",
          "UpdateNetworks",
          "SaveNetworks",
          "NewNetworkRepo"
        ],
        "imports": [
          "context",
          "fmt",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "github.com/axieinfinity/ecosystem-go-common/errors",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are initiated and may modify the database state."
        ],
        "risks": [
          "Potential SQL injection if filter conditions are not properly sanitized.",
          "Panic in SaveNetwork, UpdateNetworks, and SaveNetworks if not implemented."
        ],
        "complexity": "medium"
      },
      "repositories/preference.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing user preferences in a database using GORM.",
        "key_types": [
          "PreferenceRepo",
          "prefRepo",
          "Preference",
          "PreferenceFilter"
        ],
        "functions": [
          "GetByAddress",
          "GetList",
          "UpdateForAddress",
          "UpsertBatch",
          "UpdateForDevice",
          "DeleteByDevice",
          "DeleteBatch",
          "GetOneByDevice",
          "CountAddressRegisReceiveNews",
          "NewPreferencesRepo"
        ],
        "imports": [
          "context",
          "errors",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-manager/models",
          "github.com/axieinfinity/ronin-wallet-manager/pkg/helper"
        ],
        "side_effects": [
          "Database operations that modify user preferences."
        ],
        "risks": [
          "Potential SQL injection if user input is not properly sanitized."
        ],
        "complexity": "medium"
      },
      "repositories/quickaccess.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing quick access decentralized applications (DApps) using GORM for database interactions.",
        "key_types": [
          "QuickAccessDAppRepo",
          "quickAccessDAppRepo",
          "QuickAccessDApp"
        ],
        "functions": [
          "GetList",
          "Save",
          "SaveBatch",
          "Update",
          "UpdateBatch",
          "GetByID",
          "GetAll",
          "DeleteByID",
          "SearchByTitle",
          "NewQuickAccessDAppRepo"
        ],
        "imports": [
          "context",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are performed which may modify the state of the database."
        ],
        "risks": [
          "Potential SQL injection if user input is not properly sanitized in queries."
        ],
        "complexity": "medium"
      },
      "repositories/trusted_domain.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing trusted domains in a database, providing methods for CRUD operations.",
        "key_types": [
          "TrustedDomainRepo",
          "trustedDomainsRepo",
          "TrustedDomain",
          "Paging",
          "TrustedDomainFilter",
          "TrustedDomainOrderBy"
        ],
        "functions": [
          "GetByDomain",
          "GetList",
          "Save",
          "SaveBatch",
          "GetAll",
          "DeleteByDomain",
          "NewTrustedDomainRepo"
        ],
        "imports": [
          "context",
          "fmt",
          "strings",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-manager/models"
        ],
        "side_effects": [
          "Database transactions are initiated and may modify the database state."
        ],
        "risks": [
          "Potential SQL injection if user input is not properly sanitized in queries."
        ],
        "complexity": "medium"
      }
    }
  }
}