{
  "content_hash": "4b9417b41fdb809c221f375240b41913",
  "timestamp": "2025-09-26T07:43:10.158901+07:00",
  "result": {
    "path": "repositories",
    "purpose": "This folder/module is responsible for managing database interactions related to NFTs and tokens, including pagination, CRUD operations, and display mappings.",
    "languages": {
      "Go": 3
    },
    "key_modules": [
      "default.go",
      "nft_display_mapping.go",
      "token.go"
    ],
    "dependencies": [
      "gorm.io/gorm",
      "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
      "github.com/axieinfinity/ronin-wallet-proxy/models"
    ],
    "architecture": "The folder follows a repository pattern, encapsulating database access logic and providing a clean API for data operations.",
    "file_summaries": {
      "repositories/default.go": {
        "language": "Go",
        "purpose": "Provides a pagination function for database queries using GORM.",
        "key_types": [
          "int",
          "gorm.DB"
        ],
        "functions": [
          "paginate"
        ],
        "imports": [
          "gorm.io/gorm"
        ],
        "side_effects": [
          "Modifies the database query with offset and limit based on pagination parameters."
        ],
        "complexity": "low"
      },
      "repositories/nft_display_mapping.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing NFT display mappings, including saving, searching, and batch operations.",
        "key_types": [
          "NFTDisplayMappingRepo",
          "nftDisplayMappingRepo",
          "NFTMapping",
          "NFTMappingFilter",
          "Paging"
        ],
        "functions": [
          "Save",
          "SaveBatch",
          "SearchOne",
          "SearchList",
          "NewNFTMappingRepo"
        ],
        "imports": [
          "context",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "github.com/axieinfinity/ronin-wallet-proxy/models"
        ],
        "side_effects": [
          "Database transactions are performed which may modify the state of the database."
        ],
        "risks": [
          "Potential SQL injection if filter.ToMap() is not properly sanitized."
        ],
        "complexity": "medium"
      },
      "repositories/token.go": {
        "language": "Go",
        "purpose": "This file defines a repository for managing token information in a database, including CRUD operations and upsert functionality.",
        "key_types": [
          "TokenInfoRepositories",
          "tokenInfoRepo",
          "gorm.DB"
        ],
        "functions": [
          "GetByID",
          "CreateNewTokenInfo",
          "UpsertTokenInfo",
          "UpsertListOfTokenInfo",
          "UpdateTokenDescription",
          "UpdateTokenMetadata",
          "GetByCoingeckoIDs",
          "GetTokenByID",
          "GetAllTokens",
          "GetTokenNoDescription",
          "SearchByNameAndSymbol",
          "DeleteTokenInfoByIDs",
          "NewTokenInfoRepo"
        ],
        "imports": [
          "context",
          "slices",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-proxy/models"
        ],
        "side_effects": [
          "Database transactions are performed which may modify the state of the database."
        ],
        "risks": [
          "Potential SQL injection if inputs are not properly sanitized.",
          "Error handling may expose sensitive information if not managed correctly."
        ],
        "complexity": "medium"
      }
    }
  }
}