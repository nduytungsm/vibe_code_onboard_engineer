{
  "content_hash": "32661d305739f3ebf62fb2d3d58b5a8d",
  "timestamp": "2025-09-26T08:47:33.218433+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines an interface and implementation for managing actions related to quests in a database, including CRUD operations and transaction handling.",
    "key_types": [
      "Action",
      "action",
      "models.QuestActionEntity",
      "models.HistoryEntity"
    ],
    "functions": [
      "NewActionRepo",
      "NewTx",
      "CreateHistory",
      "FindActions",
      "DeleteAll",
      "BulkUpsert",
      "Find"
    ],
    "imports": [
      "context",
      "go.uber.org/zap",
      "gorm.io/gorm",
      "gorm.io/gorm/clause",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models"
    ],
    "side_effects": [
      "Database transactions",
      "Modifications to the database state"
    ],
    "risks": [
      "Potential SQL injection if inputs are not properly sanitized",
      "Error handling may expose sensitive information if not managed correctly"
    ],
    "complexity": "medium"
  }
}