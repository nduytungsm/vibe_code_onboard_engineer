{
  "content_hash": "e8bcc50a292cc4022c5716a1af3cf0a5",
  "timestamp": "2025-09-26T08:39:21.497337+07:00",
  "result": {
    "language": "TypeScript",
    "purpose": "This file implements a pass for optimizing the handling of initialization dependencies in reactive functions by analyzing their usage in relation to useState and useRef hooks.",
    "key_types": [
      "CreateUpdate",
      "KindMap",
      "Visitor",
      "AliasVisitor"
    ],
    "functions": [
      "pruneInitializationDependencies",
      "update",
      "getAliases"
    ],
    "imports": [
      "CompilerError",
      "Environment",
      "Identifier",
      "IdentifierId",
      "InstructionId",
      "Place",
      "PropertyLiteral",
      "ReactiveBlock",
      "ReactiveFunction",
      "ReactiveInstruction",
      "ReactiveScopeBlock",
      "ReactiveTerminalStatement",
      "getHookKind",
      "isUseRefType",
      "isUseStateType",
      "eachCallArgument",
      "eachInstructionLValue",
      "DisjointSet",
      "assertExhaustive",
      "ReactiveFunctionVisitor",
      "visitReactiveFunction"
    ],
    "side_effects": [
      "Modifies the state of the map tracking the usage of identifiers."
    ],
    "complexity": "medium"
  }
}