{
  "content_hash": "dcb62769ca1c6b0f034a9d4acfd21ce4",
  "timestamp": "2025-09-23T16:59:35.619588+07:00",
  "result": {
    "path": "pkg/nft_mapping",
    "purpose": "Provides a service for managing NFT mappings with caching and Redis integration.",
    "languages": {
      "Go": 1
    },
    "key_modules": [
      "nft_mapping_svc.go"
    ],
    "dependencies": [
      "github.com/jellydator/ttlcache/v3",
      "github.com/redis/go-redis/v9",
      "github.com/rs/zerolog/log",
      "github.com/axieinfinity/ronin-wallet-proxy/models",
      "github.com/axieinfinity/ronin-wallet-proxy/repositories"
    ],
    "architecture": "The folder follows a service-oriented architecture pattern, focusing on managing NFT mappings with an emphasis on caching and external Redis integration.",
    "file_summaries": {
      "pkg/nft_mapping/nft_mapping_svc.go": {
        "language": "Go",
        "purpose": "Provides a service for managing NFT mappings with caching and Redis integration.",
        "key_types": [
          "Service",
          "svc",
          "NFTMapping",
          "NFTMappingFilter",
          "Paging"
        ],
        "functions": [
          "Save",
          "SaveBatch",
          "SearchOne",
          "SearchList",
          "subscribeRefreshCacheChannel",
          "publishMessageRefreshCache",
          "NewService"
        ],
        "imports": [
          "context",
          "fmt",
          "time",
          "github.com/jellydator/ttlcache/v3",
          "github.com/redis/go-redis/v9",
          "github.com/rs/zerolog/log",
          "github.com/axieinfinity/ronin-wallet-proxy/models",
          "github.com/axieinfinity/ronin-wallet-proxy/repositories"
        ],
        "side_effects": [
          "Caches NFT mappings",
          "Subscribes to a Redis channel for cache invalidation"
        ],
        "risks": [
          "Potential race conditions in cache invalidation",
          "Error handling for Redis operations may not be sufficient"
        ],
        "complexity": "medium"
      }
    }
  }
}