{
  "content_hash": "372e9ae66b24a002bde602876498ff4c",
  "timestamp": "2025-09-26T15:05:44.67402+07:00",
  "result": {
    "path": "internal/services/quest-verifiers",
    "purpose": "Responsible for verifying various user actions related to quests in a gaming context, including NFT purchases, Discord interactions, staking, and more.",
    "languages": {
      "Go": 14
    },
    "key_modules": [
      "atia_blessing_verifier.go",
      "buy_nft_verifier.go",
      "discord_verifier.go",
      "game_verifier.go",
      "helpers.go",
      "quest_verifiers.go",
      "staking.go",
      "staking_verifier.go",
      "verifier_http.go",
      "verifier_onchain.go",
      "verifier_pixel_fest.go",
      "wallet_checkin_verifier.go",
      "x_verifier.go"
    ],
    "dependencies": [],
    "architecture": "The folder follows a modular architecture pattern, with each file serving a specific verification function related to user quests, promoting separation of concerns and maintainability.",
    "file_summaries": {
      "internal/services/quest-verifiers/atia_blessing_verifier.go": {
        "language": "Go",
        "purpose": "Verifies user quest streaks for the Atia blessing in a gaming context.",
        "key_types": [
          "verifyAtiaStreakProxy",
          "updateActivityAtiaState",
          "FindStreak"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/buy_nft_verifier.go": {
        "language": "Go",
        "purpose": "Verifies NFT purchase actions for quests in a gaming context.",
        "key_types": [
          "verifyBuyAxieProxy",
          "findCollectionAddress",
          "findTotalPurchased"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/discord_verifier.go": {
        "language": "Go",
        "purpose": "Verifies Discord user actions for quest participation and manages user session data.",
        "key_types": [
          "verifyJoinProxy",
          "findDiscordUserCache",
          "markDiscordAccountUsed"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/game_verifier.go": {
        "language": "Go",
        "purpose": "Verifies game registration status for users in a quest system.",
        "key_types": [
          "verifyRegisterProxy",
          "verifyNotRegisteredProxy",
          "verifyNotRegisteredPreQuest"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/helpers.go": {
        "language": "Go",
        "purpose": "Provides helper functions for verifying quest activities and managing user check-in states.",
        "key_types": [
          "updateActivityState",
          "findCheckInInternal",
          "FindStreak"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/quest_verifiers.go": {
        "language": "Go",
        "purpose": "Defines quest verification services and related data structures for handling user quests and rewards.",
        "key_types": [
          "QuestVerifier interface",
          "PDistributionInfo struct",
          "VerifyActionParams struct"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/staking.go": {
        "language": "Go",
        "purpose": "Provides a service to retrieve the amount of RON staked for a given address.",
        "key_types": [
          "StakingService",
          "stakingService",
          "GetRonStaked"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/staking_verifier.go": {
        "language": "Go",
        "purpose": "Verifies staking actions for user quests in a blockchain context.",
        "key_types": [
          "unmarshalRonStackedCondition",
          "verifyRonStakedProxy",
          "verifyRonStaked"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/verifier_http.go": {
        "language": "Go",
        "purpose": "Handles verification of user activities via HTTP requests for quest-related actions.",
        "key_types": [
          "httpActionVerifyResponse",
          "unmarshalOffChainAction",
          "verifyViaHTTP"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/verifier_onchain.go": {
        "language": "Go",
        "purpose": "Handles on-chain quest verification and asset action unmarshalling.",
        "key_types": [
          "VerificationState",
          "unmarshalOnChainAssetAction",
          "unmarshalOnChainActivityAction"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/verifier_pixel_fest.go": {
        "language": "Go",
        "purpose": "Verifies user participation in the Pixel Fest quest and updates user action status accordingly.",
        "key_types": [
          "pixelFestVerifyResponse",
          "verifyPixelFest"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/wallet_checkin_verifier.go": {
        "language": "go",
        "purpose": "Verifies wallet check-in actions for user quests.",
        "key_types": [
          "verifyWalletCheckInProxy"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/services/quest-verifiers/x_verifier.go": {
        "language": "Go",
        "purpose": "Verifies user actions related to quests, specifically for liking and reposting content.",
        "key_types": [
          "verifyLikeAndRepostX",
          "shouldCheck",
          "unmarshalActivityRef"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      }
    }
  }
}