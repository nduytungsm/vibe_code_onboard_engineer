{
  "content_hash": "852f57e9222428b11a757367a3fd1af3",
  "timestamp": "2025-09-25T18:23:26.073613+07:00",
  "result": {
    "language": "TypeScript",
    "purpose": "This file provides functionality for handling manual memoization in a React compiler context.",
    "key_types": [
      "ManualMemoCallee",
      "IdentifierSidemap"
    ],
    "functions": [
      "collectMaybeMemoDependencies",
      "collectTemporaries",
      "makeManualMemoizationMarkers",
      "getManualMemoizationReplacement",
      "extractManualMemoizationArgs"
    ],
    "imports": [
      "CompilerDiagnostic",
      "CompilerError",
      "SourceLocation",
      "ErrorCategory",
      "CallExpression",
      "Effect",
      "Environment",
      "FinishMemoize",
      "FunctionExpression",
      "HIRFunction",
      "IdentifierId",
      "Instruction",
      "InstructionId",
      "InstructionValue",
      "LoadGlobal",
      "LoadLocal",
      "ManualMemoDependency",
      "MethodCall",
      "Place",
      "PropertyLoad",
      "SpreadPattern",
      "StartMemoize",
      "TInstruction",
      "getHookKindForType",
      "makeInstructionId",
      "createTemporaryPlace",
      "markInstructionIds",
      "Result"
    ],
    "complexity": "medium"
  }
}