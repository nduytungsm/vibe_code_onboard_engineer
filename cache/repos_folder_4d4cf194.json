{
  "content_hash": "1edba380d281abf189cb843121983efb",
  "timestamp": "2025-09-26T13:33:24.755577+07:00",
  "result": {
    "path": "internal/domains/proxy/repos",
    "purpose": "Responsible for managing database interactions related to proxy repositories, including DApp sites and tokens.",
    "languages": {
      "Go": 6
    },
    "key_modules": [
      "constants.go",
      "dappsite.go",
      "dappsite_model.go",
      "token.go",
      "token_model.go",
      "token_test.go"
    ],
    "dependencies": [
      "gorm.io/gorm",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
      "github.com/samber/lo",
      "github.com/lib/pq",
      "github.com/samber/mo",
      "github.com/test-go/testify/require"
    ],
    "architecture": "The folder follows a repository pattern, encapsulating data access logic and providing a clear interface for database operations.",
    "file_summaries": {
      "internal/domains/proxy/repos/constants.go": {
        "language": "Go",
        "purpose": "Defines constants related to database columns and tables for a proxy repository.",
        "key_types": [
          "string"
        ],
        "functions": [],
        "imports": [],
        "complexity": "low"
      },
      "internal/domains/proxy/repos/dappsite.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing DApp sites in a database.",
        "key_types": [
          "DAppSiteRepo",
          "dappSiteRepo",
          "models.DAppSite"
        ],
        "functions": [
          "NewDAppSiteRepo",
          "Get",
          "Delete",
          "Upsert"
        ],
        "imports": [
          "context",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models"
        ],
        "side_effects": [
          "Database operations (CRUD) on DApp sites"
        ],
        "risks": [
          "Potential SQL injection if inputs are not properly sanitized"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/repos/dappsite_model.go": {
        "language": "Go",
        "purpose": "Defines a data model for a dApp site and provides functions to convert between database and application representations.",
        "key_types": [
          "dappSite",
          "models.DAppSite"
        ],
        "functions": [
          "fromDBDAppSite",
          "fromDAppSite"
        ],
        "imports": [
          "time",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/repos/token.go": {
        "language": "Go",
        "purpose": "This file defines a repository interface and its implementation for managing token data in a database.",
        "key_types": [
          "TokenRepo",
          "pgTokenRepo",
          "Token",
          "TokenID",
          "ChainID"
        ],
        "functions": [
          "NewPgTokenRepo",
          "Get",
          "MGet",
          "GetByAddress",
          "Upsert",
          "List",
          "ListByChainID",
          "Search",
          "SearchByChainID",
          "Delete"
        ],
        "imports": [
          "context",
          "github.com/samber/lo",
          "gorm.io/gorm",
          "gorm.io/gorm/clause",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models"
        ],
        "side_effects": [
          "Database transactions",
          "Data manipulation in the database"
        ],
        "risks": [
          "Potential SQL injection if user input is not properly sanitized",
          "Data integrity issues if transactions fail"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/repos/token_model.go": {
        "language": "Go",
        "purpose": "Defines data structures and functions for handling token information in a proxy repository.",
        "key_types": [
          "Token",
          "TokenPlatform"
        ],
        "functions": [
          "fromDBTokenPlatforms",
          "fromTokenPlatforms",
          "fromDBTokenPlatform",
          "fromTokenPlatform",
          "fromDBToken",
          "fromDBTokens",
          "fromToken"
        ],
        "imports": [
          "encoding/json",
          "time",
          "github.com/lib/pq",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/repos/token_test.go": {
        "language": "Go",
        "purpose": "Unit tests for the PostgreSQL token repository, testing CRUD operations and token retrieval by chain ID.",
        "key_types": [
          "Token",
          "Postgres"
        ],
        "functions": [
          "TestNewPgTokenRepo_CRUD",
          "TestNewPgTokenRepo_ListByChainID",
          "tokenRon",
          "tokenEther"
        ],
        "imports": [
          "context",
          "testing",
          "time",
          "github.com/samber/mo",
          "github.com/test-go/testify/require",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/docker"
        ],
        "side_effects": [
          "Starts and stops a PostgreSQL container for testing."
        ],
        "complexity": "medium"
      }
    }
  }
}