{
  "content_hash": "d828f77ce1bc571223d781fa36d1f620",
  "timestamp": "2025-09-26T13:34:34.629905+07:00",
  "result": {
    "path": "internal/services/reward-distribution",
    "purpose": "Responsible for handling reward distribution tasks using asynchronous processing.",
    "languages": {
      "Go": 5
    },
    "key_modules": [
      "handler.go",
      "processor.go",
      "processor_v3.go",
      "reward_distribute_task.go",
      "reward_order.go"
    ],
    "dependencies": [
      "github.com/hibiken/asynq",
      "github.com/google/wire",
      "github.com/prometheus/client_golang/prometheus",
      "github.com/shopspring/decimal",
      "go.uber.org/zap",
      "github.com/axieinfinity/ronin-wallet-services/pkg/async-queue",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
      "github.com/axieinfinity/ronin-wallet-services/pkg/storages",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories",
      "github.com/axieinfinity/ronin-wallet-services/internal/commons"
    ],
    "architecture": "The folder follows a modular architecture pattern, with separate files handling different aspects of reward distribution, including task scheduling, processing, and HTTP interactions.",
    "file_summaries": {
      "internal/services/reward-distribution/handler.go": {
        "language": "Go",
        "purpose": "Defines a function to create a new ServeMux for handling reward distribution tasks.",
        "key_types": [
          "asynq.Handler",
          "asynq.ServeMux"
        ],
        "functions": [
          "NewMuxHandler"
        ],
        "imports": [
          "github.com/hibiken/asynq"
        ],
        "complexity": "low"
      },
      "internal/services/reward-distribution/processor.go": {
        "language": "Go",
        "purpose": "This file implements a reward distribution processor that handles reward distribution tasks using asynchronous processing.",
        "key_types": [
          "RewardPoolConfig",
          "ProcessorConfig",
          "tokenOrder",
          "createRewardOrdersReq",
          "rewardDistributeProcessor"
        ],
        "functions": [
          "NewRewardDistributeProcessor",
          "ProcessTask",
          "ProvideRedisClientOpt"
        ],
        "imports": [
          "context",
          "time",
          "github.com/google/wire",
          "github.com/hibiken/asynq",
          "github.com/prometheus/client_golang/prometheus",
          "github.com/shopspring/decimal",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/pkg/async-queue",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/metrics",
          "github.com/axieinfinity/ronin-wallet-services/pkg/storages"
        ],
        "side_effects": [
          "Records the latency of processing reward distribution tasks"
        ],
        "risks": [
          "Potential exposure of sensitive information due to redacted fields"
        ],
        "complexity": "medium"
      },
      "internal/services/reward-distribution/processor_v3.go": {
        "language": "Go",
        "purpose": "Handles reward distribution tasks using the asynq library.",
        "key_types": [
          "rewardDistributeProcessorV3",
          "ProcessorConfig",
          "DistributePayloadV3",
          "createRewardOrdersReq"
        ],
        "functions": [
          "NewRewardDistributorV3Provider",
          "ProcessTask",
          "makeRequestOrderV3"
        ],
        "imports": [
          "context",
          "encoding/json",
          "errors",
          "fmt",
          "github.com/google/wire",
          "github.com/hibiken/asynq",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/internal/repositories"
        ],
        "side_effects": [
          "Logs errors when unmarshalling JSON payload.",
          "Logs errors when pool is not found.",
          "Logs errors when updating the database fails."
        ],
        "risks": [
          "Potential exposure of sensitive information due to redacted fields.",
          "Error handling may not cover all edge cases."
        ],
        "complexity": "medium"
      },
      "internal/services/reward-distribution/reward_distribute_task.go": {
        "language": "Go",
        "purpose": "This file defines a task for distributing rewards to users, including payload structures and a function to create a scheduled task.",
        "key_types": [
          "DistributePayloadV3",
          "RequestOrderV3"
        ],
        "functions": [
          "NewRewardDistributeTaskScheduleV3"
        ],
        "imports": [
          "encoding/json",
          "time",
          "github.com/hibiken/asynq",
          "github.com/shopspring/decimal"
        ],
        "complexity": "medium"
      },
      "internal/services/reward-distribution/reward_order.go": {
        "language": "Go",
        "purpose": "Handles the creation of reward orders through an HTTP client.",
        "key_types": [
          "RewardOrder",
          "rewardOrderImpl",
          "createRewardOrdersReq",
          "tokenOrderResp",
          "createRewardOrdersSuccessResp",
          "createRewardOrdersFailResp"
        ],
        "functions": [
          "NewRewardOrder",
          "RequestOrder"
        ],
        "imports": [
          "context",
          "errors",
          "github.com/axieinfinity/ronin-wallet-services/internal/commons",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "go.uber.org/zap"
        ],
        "side_effects": [
          "Makes HTTP requests to an external service."
        ],
        "risks": [
          "Potential for HTTP request failures.",
          "Error handling may expose sensitive information."
        ],
        "complexity": "medium"
      }
    }
  }
}