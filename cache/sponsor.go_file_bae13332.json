{
  "content_hash": "59da992a4e7b79b3d9aab550bac64116",
  "timestamp": "2025-09-26T13:12:43.588481+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines a repository interface and its implementation for managing sponsors in a database, including operations like searching, inserting, updating, and deleting sponsor records.",
    "key_types": [
      "SponsorRepo",
      "sponsorRepo",
      "models.SponsorEntity",
      "models.HistoryEntity",
      "models.EventSponsor"
    ],
    "functions": [
      "NewSponsorRepo",
      "Upsert",
      "CreateHistory",
      "NewTx",
      "Search",
      "Insert",
      "Update",
      "First",
      "Delete",
      "Find",
      "FindSponsorByEv",
      "CreateEventSponsors",
      "DeleteEventSponsors"
    ],
    "imports": [
      "context",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models",
      "go.uber.org/zap",
      "gorm.io/gorm",
      "gorm.io/gorm/clause"
    ],
    "side_effects": [
      "Database transactions for creating, updating, and deleting records"
    ],
    "risks": [
      "Potential SQL injection if input is not properly sanitized",
      "Error handling may expose sensitive information if not managed correctly"
    ],
    "complexity": "medium"
  }
}