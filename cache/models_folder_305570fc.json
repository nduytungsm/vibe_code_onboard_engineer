{
  "content_hash": "60a72c1b7f5de8c6c044dfad2a68628d",
  "timestamp": "2025-09-26T14:03:48.922377+07:00",
  "result": {
    "path": "internal/domains/proxy/models",
    "purpose": "Defines data models for handling proxy activities, token transactions, and related configurations in a proxy service.",
    "languages": {
      "Go": 10
    },
    "key_modules": [
      "activity.go",
      "balance.go",
      "coingecko.go",
      "common.go",
      "config.go",
      "dapp.go",
      "fiat.go",
      "nft.go",
      "profile.go",
      "simulate.go",
      "token.go"
    ],
    "dependencies": [],
    "architecture": "The folder follows a modular architecture pattern, organizing related data models into separate files for clarity and maintainability.",
    "file_summaries": {
      "internal/domains/proxy/models/activity.go": {
        "language": "Go",
        "purpose": "Defines data models for handling proxy activity and token transactions.",
        "key_types": [
          "Gas",
          "TxToken",
          "TokenBalanceDiff"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/models/balance.go": {
        "language": "Go",
        "purpose": "Defines data models for managing token and NFT allocations in a proxy service.",
        "key_types": [
          "Erc20Allocation",
          "NftAllocation",
          "PortfolioTokenItem"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/models/coingecko.go": {
        "language": "Go",
        "purpose": "Defines a model for managing Coingecko platform mappings and native tokens.",
        "key_types": [
          "CoingeckoPlatforms",
          "NewCoingeckoPlatforms",
          "Add"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/models/common.go": {
        "language": "Go",
        "purpose": "Defines user cursor management for pagination in a proxy model.",
        "key_types": [
          "Entities",
          "UserCursor",
          "FindUserCursor"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/models/config.go": {
        "language": "Go",
        "purpose": "Defines configuration models for blockchain proxy services.",
        "key_types": [
          "ChainCfg",
          "TokenCfg",
          "ChainProvider"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/models/dapp.go": {
        "language": "Go",
        "purpose": "Defines data models for DApp scanning results and site information.",
        "key_types": [
          "DAppScanResult",
          "DAppSite",
          "ScanStatus"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "internal/domains/proxy/models/fiat.go": {
        "language": "Go",
        "purpose": "Defines the TokenFiatInfo struct for representing fiat token information.",
        "key_types": [
          "TokenFiatInfo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "internal/domains/proxy/models/nft.go": {
        "language": "Go",
        "purpose": "Defines the CollectionDetail struct for NFT collection data.",
        "key_types": [
          "CollectionDetail"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "internal/domains/proxy/models/profile.go": {
        "language": "go",
        "purpose": "Defines a model for checking the existence of a profile based on an address.",
        "key_types": [
          "ProfileExistence"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "internal/domains/proxy/models/simulate.go": {
        "language": "Go",
        "purpose": "Defines simulation-related RPC methods and their constants for Ethereum transactions.",
        "key_types": [
          "SimulateRPCMethod",
          "SimulationStatus"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/models/token.go": {
        "language": "Go",
        "purpose": "Defines token models and related types for a proxy service.",
        "key_types": [
          "Token",
          "InternalToken",
          "TokenPlatformSource"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      }
    }
  }
}