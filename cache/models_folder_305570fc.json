{
  "content_hash": "9b41c4922783aa891f87989f918da7dc",
  "timestamp": "2025-09-26T13:32:18.455814+07:00",
  "result": {
    "path": "internal/domains/proxy/models",
    "purpose": "Defines data structures and methods for managing blockchain-related activities, token allocations, DApp results, and configurations within a proxy service.",
    "languages": {
      "Go": 10
    },
    "key_modules": [
      "activity.go",
      "balance.go",
      "coingecko.go",
      "common.go",
      "config.go",
      "dapp.go",
      "fiat.go",
      "nft.go",
      "profile.go",
      "simulate.go",
      "token.go"
    ],
    "dependencies": [
      "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
      "github.com/axieinfinity/ronin-wallet-services/pkg/types",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/ethereum/go-ethereum/common/hexutil",
      "github.com/samber/lo",
      "github.com/samber/mo",
      "github.com/shopspring/decimal"
    ],
    "architecture": "The folder follows a modular architecture pattern, organizing related data structures and functionalities into separate files for clarity and maintainability.",
    "file_summaries": {
      "internal/domains/proxy/models/activity.go": {
        "language": "Go",
        "purpose": "Defines data structures and methods for handling blockchain activity related to transactions, token transfers, and contract approvals.",
        "key_types": [
          "Gas",
          "TxToken",
          "TokenBalanceDiff",
          "ActivityGenericInfo",
          "ContractApproval",
          "ActivityItem",
          "TxDetail",
          "BlockInfo",
          "Log",
          "DecodedEvent",
          "EventParam",
          "DecodedCall"
        ],
        "functions": [
          "NewActivityItem",
          "AddGenericInfo",
          "AddToken",
          "AddApprovals"
        ],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/models/balance.go": {
        "language": "Go",
        "purpose": "Defines data structures for managing ERC20 and NFT allocations in a portfolio.",
        "key_types": [
          "Erc20Allocation",
          "NftAllocation",
          "PortfolioTokenExtraInfo",
          "PortfolioNftExtraInfo",
          "PortfolioTokenItem",
          "NftAttribute",
          "NftMetadata",
          "PortfolioNftItem",
          "PortfolioCollectionOverview"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/models/coingecko.go": {
        "language": "Go",
        "purpose": "Defines a model for managing Coingecko platform data including mappings between platform names, IDs, and native tokens.",
        "key_types": [
          "CoingeckoPlatforms",
          "ChainID",
          "TokenID"
        ],
        "functions": [
          "NewCoingeckoPlatforms",
          "PlatformID2Name",
          "PlatformName2ID",
          "OfNativeToken",
          "Add"
        ],
        "imports": [],
        "complexity": "medium"
      },
      "internal/domains/proxy/models/common.go": {
        "language": "Go",
        "purpose": "Defines data structures and functions for managing user cursors in a proxy model.",
        "key_types": [
          "Entities",
          "UserCursorKey",
          "UserCursor"
        ],
        "functions": [
          "NewUserCursor",
          "FindUserCursor",
          "Merge",
          "AddCursor",
          "InitializeCursor",
          "NewKey",
          "KeyFromStr"
        ],
        "imports": [
          "errors",
          "fmt",
          "strconv",
          "strings",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/models/config.go": {
        "language": "Go",
        "purpose": "Defines configuration structures for proxy services including chain configurations, token configurations, and provider settings.",
        "key_types": [
          "ChainCfg",
          "TokenCfg",
          "ChainProvider",
          "ChainSimulation",
          "ProviderCacheCfg",
          "ProviderCfg",
          "InternalSvcCfg",
          "LimitCfgs",
          "CircuitBreakerCfg"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/models/dapp.go": {
        "language": "Go",
        "purpose": "Defines data structures for DApp scan results and statuses.",
        "key_types": [
          "ScanStatus",
          "DAppScanResult",
          "DAppSite"
        ],
        "functions": [],
        "imports": [
          "time"
        ],
        "complexity": "low"
      },
      "internal/domains/proxy/models/fiat.go": {
        "language": "Go",
        "purpose": "Defines a struct for storing information about fiat tokens.",
        "key_types": [
          "TokenFiatInfo"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "low"
      },
      "internal/domains/proxy/models/nft.go": {
        "language": "Go",
        "purpose": "Defines a data structure for NFT collection details.",
        "key_types": [
          "CollectionDetail",
          "PortfolioCollectionOverview",
          "NonEmptyStr"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "low"
      },
      "internal/domains/proxy/models/profile.go": {
        "language": "Go",
        "purpose": "Defines a data structure for profile existence with an address and a boolean flag.",
        "key_types": [
          "ProfileExistence"
        ],
        "functions": [],
        "imports": [],
        "complexity": "low"
      },
      "internal/domains/proxy/models/simulate.go": {
        "language": "Go",
        "purpose": "Defines models and types for simulating Ethereum RPC methods and handling simulation results.",
        "key_types": [
          "SimulateRPCMethod",
          "SimulationStatus",
          "SimulationResultType",
          "SimulateParams",
          "SimulateJsonRPC",
          "USDDiff",
          "USDExposure",
          "JsonRPCValidation",
          "SimulationErrorDetails",
          "DecodedMethod",
          "JsonRPCSimulation",
          "SimulatedJsonRPC",
          "TransactionGasEstimation",
          "TransactionFeature",
          "Asset",
          "AssetChange",
          "Balance",
          "BalanceChanges",
          "AssetDiffs",
          "AssetTrace",
          "AssetExposure",
          "AssetSpender"
        ],
        "functions": [
          "Value()",
          "Values()",
          "SimulationResultTypeFromString(s string) (SimulationResultType, error)"
        ],
        "imports": [
          "fmt",
          "strings",
          "time",
          "github.com/ethereum/go-ethereum/common/hexutil",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "github.com/shopspring/decimal",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/web3/models",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/domains/proxy/models/token.go": {
        "language": "Go",
        "purpose": "Defines data structures and methods for handling tokens and their attributes in a cryptocurrency context.",
        "key_types": [
          "ChainID",
          "TokenID",
          "Currency",
          "TokenPlatformSource",
          "Token",
          "InternalToken",
          "TokenPlatform",
          "InternalTokenPlatform",
          "Quote",
          "Quotes",
          "TokenPlatformsBuilder",
          "TimeRange",
          "ChartItem",
          "PriceChart"
        ],
        "functions": [
          "String()",
          "AsToken()",
          "AsTokenPlatform()",
          "NewTokenPlatformsBuilder()",
          "key()",
          "Add()",
          "Build()",
          "Value()",
          "Values()",
          "NumberOfDays()"
        ],
        "imports": [
          "fmt",
          "strconv",
          "strings",
          "time",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy"
        ],
        "complexity": "medium"
      }
    }
  }
}