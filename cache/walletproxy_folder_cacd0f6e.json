{
  "content_hash": "d9368e191a54b035955052f7f03699e7",
  "timestamp": "2025-09-26T13:28:52.827113+07:00",
  "result": {
    "path": "internal/infras/walletproxy",
    "purpose": "This folder/module is responsible for providing a client interface to interact with a wallet service, handling operations related to user balances, NFT items, and user activities.",
    "languages": {
      "Go": 2
    },
    "key_modules": [
      "client.go",
      "models.go"
    ],
    "dependencies": [
      "go.uber.org/zap",
      "github.com/axieinfinity/ronin-wallet-services/pkg/errors",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/samber/lo",
      "github.com/samber/mo",
      "go.uber.org/multierr",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
      "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
      "github.com/axieinfinity/ronin-wallet-services/pkg/types"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating wallet proxy functionalities into distinct files that manage client interactions and data models.",
    "file_summaries": {
      "internal/infras/walletproxy/client.go": {
        "language": "Go",
        "purpose": "This file implements a client for interacting with a wallet service, providing methods to retrieve user balances, NFT items, and user activities.",
        "key_types": [
          "PathPatterns",
          "Config",
          "Client",
          "clientHTTP"
        ],
        "functions": [
          "NewClient",
          "GetFungibleBalance",
          "GetUserActivities",
          "GetNFTItems",
          "GetTokenPrice"
        ],
        "imports": [
          "context",
          "fmt",
          "net/url",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/pkg/errors",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http"
        ],
        "side_effects": [
          "HTTP requests are made to external services."
        ],
        "risks": [
          "Potential exposure of sensitive user data through HTTP requests.",
          "Error handling may not cover all edge cases."
        ],
        "complexity": "medium"
      },
      "internal/infras/walletproxy/models.go": {
        "language": "Go",
        "purpose": "Defines data structures and types for handling wallet proxy operations, including token requests, NFT items, and user activities.",
        "key_types": [
          "SingleFiatTokenReq",
          "TokenPriceReq",
          "TokenFiatInfo",
          "FungibleBalance",
          "FungibleBalanceReq",
          "NFTItemsReq",
          "NFTItem",
          "ActivitiesReq",
          "Activity",
          "Page",
          "PagedResponse",
          "ChainError",
          "ChainErrors"
        ],
        "functions": [
          "Error() for ChainError",
          "Error() for ChainErrors"
        ],
        "imports": [
          "fmt",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "go.uber.org/multierr",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/proxy/models",
          "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/proxy",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      }
    }
  }
}