{
  "content_hash": "c3e3b86bf2440743b55643d045ba0112",
  "timestamp": "2025-09-26T13:25:23.037899+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines a repository interface and its implementation for managing shop categories, items, and purchases in a database.",
    "key_types": [
      "ShopRepo",
      "shopRepo",
      "ShopCategoryEntity",
      "ShopItemTierEntity",
      "ShopItemEntity",
      "ShopItemPurchaseEntity",
      "ShopItemInventoryEntity"
    ],
    "functions": [
      "NewShopRepo",
      "GetCategories",
      "GetCategoryByID",
      "CreateCategory",
      "UpdateCategory",
      "DeleteCategory",
      "GetTiersByCategoryID",
      "CreateTier",
      "UpdateTier",
      "DeleteTier",
      "GetItemByID",
      "CreateItem",
      "UpdateItem",
      "DeleteItem"
    ],
    "imports": [
      "context",
      "errors",
      "fmt",
      "strings",
      "time",
      "go.uber.org/zap",
      "gorm.io/gorm",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models"
    ],
    "side_effects": [
      "Database transactions for creating, updating, and deleting categories, items, and tiers."
    ],
    "complexity": "medium"
  }
}