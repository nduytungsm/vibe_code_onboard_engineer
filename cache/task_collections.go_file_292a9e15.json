{
  "content_hash": "5721062ae64e96d1ba819b07a1ecd9d1",
  "timestamp": "2025-09-26T12:32:53.39032+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file contains logic for handling marketplace collections, including fetching data, processing it, and updating a database.",
    "key_types": [
      "MarketplaceCollectionResult",
      "MarketplaceCollectionsRanking",
      "MarketplaceCollectionItem",
      "StatsItem",
      "CollectionDataJson",
      "CollectionsMarketplaceTaskLogic"
    ],
    "functions": [
      "NewCollectionsMarketplaceTaskLogic",
      "Name",
      "Run",
      "getPayload",
      "reqCollect",
      "getCollectionsLimit",
      "getCollectionsRange",
      "getStatsItem",
      "findStatsCollection"
    ],
    "imports": [
      "context",
      "encoding/json",
      "fmt",
      "strconv",
      "strings",
      "go.uber.org/zap",
      "gorm.io/datatypes",
      "gorm.io/gorm",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/discovery",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/discovery/models",
      "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums/discovery",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http"
    ],
    "side_effects": [
      "Database updates via UpsertCollection method",
      "Logging errors and information"
    ],
    "risks": [
      "Potential for SQL injection if input is not properly sanitized",
      "Error handling may not cover all edge cases"
    ],
    "complexity": "medium"
  }
}