{
  "content_hash": "79389957e769a63228501f2aa04fa927",
  "timestamp": "2025-09-23T16:30:33.038315+07:00",
  "result": {
    "path": "pkg/share",
    "purpose": "This folder/module is responsible for providing shared types, constants, and error handling for blockchain-related functionalities.",
    "languages": {
      "Go": 6
    },
    "key_modules": [
      "big_int.go",
      "big_int_test.go",
      "const_chain.go",
      "const_provider.go",
      "error.go",
      "response.go"
    ],
    "dependencies": [
      "github.com/axieinfinity/ronin-wallet-proxy/pkg/share",
      "github.com/axieinfinity/ecosystem-go-common/errors",
      "github.com/axieinfinity/ronin-wallet-proxy/models"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating related functionalities and types for easy reuse across the application.",
    "file_summaries": {
      "pkg/share/big_int.go": {
        "language": "Go",
        "purpose": "Defines a custom big integer type with JSON marshaling and unmarshaling capabilities.",
        "key_types": [
          "MyBigInt"
        ],
        "functions": [
          "Marshal",
          "UnmarshalJSON"
        ],
        "imports": [
          "bytes",
          "encoding/json",
          "fmt",
          "math/big"
        ],
        "complexity": "medium"
      },
      "pkg/share/big_int_test.go": {
        "language": "Go",
        "purpose": "Unit tests for the MyBigInt type in the share package.",
        "key_types": [
          "TokenBalanceResponse",
          "share.MyBigInt"
        ],
        "functions": [
          "TestMyBigInt"
        ],
        "imports": [
          "encoding/json",
          "fmt",
          "testing",
          "github.com/axieinfinity/ronin-wallet-proxy/pkg/share"
        ],
        "side_effects": [
          "Prints output to the console",
          "Errors are reported during testing"
        ],
        "risks": [
          "Potential for panic if Balance is nil",
          "Improper handling of JSON unmarshalling errors"
        ],
        "complexity": "medium"
      },
      "pkg/share/const_chain.go": {
        "language": "Go",
        "purpose": "Defines constants for various blockchain networks and gas suggestion types.",
        "key_types": [
          "string"
        ],
        "functions": [],
        "imports": [],
        "complexity": "low"
      },
      "pkg/share/const_provider.go": {
        "language": "Go",
        "purpose": "Defines constants for various providers and functions related to blockchain interactions.",
        "key_types": [],
        "functions": [],
        "imports": [],
        "complexity": "low"
      },
      "pkg/share/error.go": {
        "language": "Go",
        "purpose": "Defines error variables for handling specific error cases in the application.",
        "key_types": [
          "error"
        ],
        "functions": [
          "NewWithCode"
        ],
        "imports": [
          "net/http",
          "github.com/axieinfinity/ecosystem-go-common/errors"
        ],
        "complexity": "low"
      },
      "pkg/share/response.go": {
        "language": "Go",
        "purpose": "Defines an empty response structure for transaction lists.",
        "key_types": [
          "GetTransactionsRes",
          "ListResponse",
          "Transaction"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-proxy/models"
        ],
        "complexity": "low"
      }
    }
  }
}