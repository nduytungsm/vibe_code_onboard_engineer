{
  "content_hash": "bb519b4ff221298c2c1ea654686c0eb6",
  "timestamp": "2025-09-26T14:06:00.980048+07:00",
  "result": {
    "path": "internal/domains/proxy/services/providers",
    "purpose": "Responsible for defining various providers that interact with different blockchain APIs and manage multi-chain data.",
    "languages": {
      "Go": 9
    },
    "key_modules": [
      "alchemy.go",
      "cache.go",
      "chained.go",
      "getblock.go",
      "moralis.evm.go",
      "moralis.solana.go",
      "provider.go",
      "skynet.go",
      "utils.go"
    ],
    "dependencies": [],
    "architecture": "The folder follows a modular architecture pattern, where each file defines a specific provider or utility related to blockchain interactions, promoting separation of concerns and reusability.",
    "file_summaries": {
      "internal/domains/proxy/services/providers/alchemy.go": {
        "language": "Go",
        "purpose": "Defines the AlchemyProvider for interacting with the Alchemy API in a multi-chain environment.",
        "key_types": [
          "AlchemyProvider",
          "AlchemyProviderName",
          "AlchemyProviderCreator"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/cache.go": {
        "language": "Go",
        "purpose": "Provides caching functionality for portfolio-related data in a multi-chain provider context.",
        "key_types": [
          "CachedProvider",
          "GetPortfolioBalance",
          "GetTokenFiatInfo"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/chained.go": {
        "language": "Go",
        "purpose": "Defines circuit breaker settings and structures for handling provider methods in a proxy service.",
        "key_types": [
          "cbSetting",
          "providerCircuitBreakers",
          "newProviderCircuitBreakers"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/getblock.go": {
        "language": "Go",
        "purpose": "Defines a provider for interacting with the GetBlock API to retrieve blockchain data.",
        "key_types": [
          "GetBlockProvider",
          "GetBlockProviderName",
          "GetBlockProviderCreator"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/moralis.evm.go": {
        "language": "Go",
        "purpose": "Defines a Moralis provider for handling Ethereum Virtual Machine (EVM) interactions.",
        "key_types": [
          "moralisProvider",
          "EvmMoralisProviderCreator",
          "MoralisProviderName"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/moralis.solana.go": {
        "language": "Go",
        "purpose": "Defines a provider for interacting with the Moralis API specifically for the Solana blockchain.",
        "key_types": [
          "MoralisSolanaProvider",
          "MoralisSolanaProviderName",
          "MoralisSolanaProviderCreator"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/provider.go": {
        "language": "Go",
        "purpose": "Defines a multi-chain provider interface for handling portfolio and transaction data.",
        "key_types": [
          "MultiChainProvider",
          "PaginatedResponse",
          "activitiesListingResp"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/skynet.go": {
        "language": "Go",
        "purpose": "Defines the Skynet provider for handling proxy services in a blockchain context.",
        "key_types": [
          "skynetProvider",
          "SkynetProviderCreator",
          "decodeResult"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/proxy/services/providers/utils.go": {
        "language": "Go",
        "purpose": "Utility functions for handling NFT metadata attributes in a proxy service.",
        "key_types": [
          "extractMetadataAttributes",
          "loopFetcher",
          "transferDecodeResult"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      }
    }
  }
}