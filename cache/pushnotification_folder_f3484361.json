{
  "content_hash": "540d451eddd116012eae2331eab4ab33",
  "timestamp": "2025-09-26T13:35:44.9967+07:00",
  "result": {
    "path": "internal/infras/pushnotification",
    "purpose": "Responsible for handling push notification requests and sending them via Kafka.",
    "languages": {
      "Go": 2
    },
    "key_modules": [
      "models.go",
      "producer.go"
    ],
    "dependencies": [
      "github.com/axieinfinity/ronin-wallet-services/internal/enums",
      "github.com/IBM/sarama",
      "go.uber.org/zap",
      "github.com/axieinfinity/ronin-wallet-services/internal/domains/notification/models",
      "github.com/axieinfinity/ronin-wallet-services/pkg/sarama-kafka"
    ],
    "architecture": "The folder follows a modular architecture pattern, separating data models and the notification producer functionality.",
    "file_summaries": {
      "internal/infras/pushnotification/models.go": {
        "language": "Go",
        "purpose": "Defines data structures for push notification requests.",
        "key_types": [
          "PostNotificationRequest",
          "Payload",
          "Recipient"
        ],
        "functions": [],
        "imports": [
          "github.com/axieinfinity/ronin-wallet-services/internal/enums"
        ],
        "complexity": "low"
      },
      "internal/infras/pushnotification/producer.go": {
        "language": "Go",
        "purpose": "This file implements a producer for sending push notifications using Kafka.",
        "key_types": [
          "ProducerConfig",
          "Producer",
          "producer"
        ],
        "functions": [
          "PublishNotification",
          "NewProducer"
        ],
        "imports": [
          "context",
          "encoding/json",
          "time",
          "github.com/IBM/sarama",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/internal/domains/notification/models",
          "github.com/axieinfinity/ronin-wallet-services/pkg/sarama-kafka"
        ],
        "side_effects": [
          "Logs errors when marshalling JSON or publishing messages."
        ],
        "risks": [
          "Potential for message loss if Kafka is not properly configured.",
          "Error handling may expose sensitive information in logs."
        ],
        "complexity": "medium"
      }
    }
  }
}