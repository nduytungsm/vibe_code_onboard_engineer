{
  "content_hash": "10b5ae360b187ddf31fa165ff4a2a69b",
  "timestamp": "2025-09-26T13:34:49.708598+07:00",
  "result": {
    "path": "internal/infras/kyberswap",
    "purpose": "This folder/module is responsible for providing a client to interact with the Kyberswap API, including functionalities for swapping routes, checking price impacts, and managing token transactions.",
    "languages": {
      "Go": 3
    },
    "key_modules": [
      "client.go",
      "client_test.go",
      "models.go"
    ],
    "dependencies": [
      "github.com/samber/lo",
      "github.com/samber/mo",
      "go.uber.org/zap",
      "github.com/axieinfinity/ronin-wallet-services/pkg/http",
      "github.com/axieinfinity/ronin-wallet-services/pkg/types",
      "github.com/test-go/testify/require",
      "github.com/ethereum/go-ethereum/common/hexutil",
      "github.com/shopspring/decimal"
    ],
    "architecture": "The folder follows a modular architecture pattern, encapsulating the client logic, data models, and testing within separate files to promote maintainability and testability.",
    "file_summaries": {
      "internal/infras/kyberswap/client.go": {
        "language": "Go",
        "purpose": "This file defines a client for interacting with the Kyberswap API, providing methods for swapping routes, building routes, checking price impacts, and retrieving tokens.",
        "key_types": [
          "Config",
          "Client",
          "clientHTTP"
        ],
        "functions": [
          "NewClient",
          "SwapRoute",
          "BuildRoute",
          "PriceImpact",
          "GetTokens",
          "GetTokensByAddresses",
          "chainSlug"
        ],
        "imports": [
          "context",
          "errors",
          "net/url",
          "strings",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "go.uber.org/zap",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      },
      "internal/infras/kyberswap/client_test.go": {
        "language": "Go",
        "purpose": "This file contains unit tests for the Kyberswap client, testing various functionalities such as route retrieval and price impact calculation.",
        "key_types": [
          "Config",
          "GetRoutesRequest",
          "BuildRoutesRequest",
          "PriceImpactRequest"
        ],
        "functions": [
          "TestGetRoute",
          "log"
        ],
        "imports": [
          "context",
          "encoding/json",
          "testing",
          "github.com/samber/lo",
          "github.com/samber/mo",
          "github.com/test-go/testify/require",
          "github.com/axieinfinity/ronin-wallet-services/pkg/http",
          "github.com/axieinfinity/ronin-wallet-services/pkg/loggers",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "side_effects": [
          "Logs output to the testing log"
        ],
        "complexity": "medium"
      },
      "internal/infras/kyberswap/models.go": {
        "language": "Go",
        "purpose": "Defines data structures and methods for handling routes and token transactions in a decentralized finance application.",
        "key_types": [
          "ChargeFeeBy",
          "ExtraFee",
          "GetRoutesRequest",
          "APIResponse",
          "Route",
          "RouteSummary",
          "SwapRouteData",
          "BuildRoutesRequest",
          "BuildRouteData",
          "PriceImpactRequest",
          "PriceImpactData",
          "Token",
          "TokensData",
          "Pagination"
        ],
        "functions": [
          "AsQueryParams",
          "Address"
        ],
        "imports": [
          "errors",
          "strconv",
          "strings",
          "github.com/ethereum/go-ethereum/common/hexutil",
          "github.com/samber/mo",
          "github.com/shopspring/decimal",
          "github.com/axieinfinity/ronin-wallet-services/pkg/types"
        ],
        "complexity": "medium"
      }
    }
  }
}