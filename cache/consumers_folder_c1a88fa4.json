{
  "content_hash": "b95a50ae466342e76a9dbcdbb231007b",
  "timestamp": "2025-09-26T14:05:38.800192+07:00",
  "result": {
    "path": "internal/domains/antenna/consumers",
    "purpose": "Responsible for handling events and processing notifications related to token transfers, ensuring idempotency in message processing, and monitoring consumer routines.",
    "languages": {
      "Go": 3
    },
    "key_modules": [
      "block_full_event.go",
      "idempotency.go",
      "metrics.go"
    ],
    "dependencies": [
      "Redis",
      "Kafka",
      "Prometheus"
    ],
    "architecture": "The folder follows a modular architecture pattern, organizing related functionalities into separate files for handling events, ensuring message processing idempotency, and monitoring metrics.",
    "file_summaries": {
      "internal/domains/antenna/consumers/block_full_event.go": {
        "language": "Go",
        "purpose": "Handles block full events and processes notifications related to token transfers.",
        "key_types": [
          "BlockFullEventHandler",
          "NewBlockFullEventHandler",
          "NotificationFilterConfig"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/antenna/consumers/idempotency.go": {
        "language": "Go",
        "purpose": "Handles idempotency for processing messages using Redis and Kafka.",
        "key_types": [
          "IdempotencyMessageHandler",
          "NewIdempotencyHandler",
          "Process"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "internal/domains/antenna/consumers/metrics.go": {
        "language": "Go",
        "purpose": "Defines and initializes Prometheus metrics for monitoring consumer routines in the antenna service.",
        "key_types": [
          "metricCollectors",
          "initMetrics"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      }
    }
  }
}