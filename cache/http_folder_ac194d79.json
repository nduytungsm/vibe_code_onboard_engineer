{
  "content_hash": "13a6442e5a38cba84ed6fa66a15b1785",
  "timestamp": "2025-09-26T13:42:58.368369+07:00",
  "result": {
    "path": "pkg/http",
    "purpose": "This folder/module is responsible for implementing an HTTP client and server, defining request parameters, handling errors, and monitoring performance metrics.",
    "languages": {
      "Go": 7
    },
    "key_modules": [
      "client.go",
      "client_params.go",
      "handler.go",
      "metrics.go",
      "middlewares.go",
      "server.go",
      "tracer.go"
    ],
    "dependencies": [
      "github.com/go-resty/resty/v2",
      "go.uber.org/zap",
      "github.com/labstack/echo/v4",
      "github.com/labstack/echo-contrib/echoprometheus",
      "github.com/jackc/pgconn",
      "gorm.io/gorm",
      "github.com/axieinfinity/ronin-wallet-services/pkg/errors",
      "github.com/axieinfinity/ronin-wallet-services/pkg/validation"
    ],
    "architecture": "The folder follows a modular architecture pattern, separating concerns into distinct files for client, server, middleware, and metrics, facilitating maintainability and scalability.",
    "file_summaries": {
      "pkg/http/client.go": {
        "language": "Go",
        "purpose": "This file implements an HTTP client with configurable settings and error handling for making HTTP requests.",
        "key_types": [
          "RequestError",
          "AuthConfig",
          "ClientConfig",
          "ResponseBody",
          "Client"
        ],
        "functions": [
          "DefaultClientConfig",
          "NewHttpClient",
          "SetCertificates",
          "AddDefaultParams",
          "SetRedirectPolicies",
          "Get",
          "Post",
          "formRestyRequest",
          "handleResponse"
        ],
        "imports": [
          "context",
          "crypto/tls",
          "fmt",
          "log",
          "net/http",
          "time",
          "github.com/go-resty/resty/v2",
          "go.uber.org/zap"
        ],
        "side_effects": [
          "Logs fatal error if client name is required but not provided."
        ],
        "risks": [
          "Potential exposure of sensitive authentication details if not handled properly."
        ],
        "complexity": "medium"
      },
      "pkg/http/client_params.go": {
        "language": "Go",
        "purpose": "This file defines parameters and methods for configuring HTTP requests, including authentication and query parameters.",
        "key_types": [
          "RequestParam",
          "BasicAuth",
          "ApiKeyAuth",
          "BearerTokenAuth",
          "HMacAuth",
          "headersParam",
          "removeHeadersParam",
          "queryParam",
          "authTokenParam",
          "pathParams"
        ],
        "functions": [
          "WithQueryParamsEscaped",
          "WithQueryParams",
          "WithQueryParam",
          "WithHeaders",
          "WithoutHeaders",
          "WithoutHeader",
          "WithAuthToken",
          "WithPathParam",
          "RequestHeader",
          "Sign",
          "SHA256"
        ],
        "imports": [
          "crypto/hmac",
          "crypto/sha256",
          "encoding/base64",
          "errors",
          "fmt",
          "log",
          "net/http",
          "net/url",
          "sort",
          "strings",
          "time",
          "github.com/go-resty/resty/v2"
        ],
        "side_effects": [
          "Logs errors when URL parsing or HMAC signing fails."
        ],
        "risks": [
          "Sensitive information such as access keys and tokens may be exposed if not handled properly."
        ],
        "complexity": "medium"
      },
      "pkg/http/handler.go": {
        "language": "Go",
        "purpose": "Defines HTTP handlers and routes for a web application using the Echo framework.",
        "key_types": [
          "Handler",
          "GroupHandlers",
          "Routes",
          "healthHandler"
        ],
        "functions": [
          "NewHealthHandler",
          "Setup"
        ],
        "imports": [
          "net/http",
          "github.com/labstack/echo/v4"
        ],
        "side_effects": [
          "Sets up HTTP routes for health check"
        ],
        "complexity": "medium"
      },
      "pkg/http/metrics.go": {
        "language": "Go",
        "purpose": "This file defines metrics for HTTP client performance monitoring using Prometheus.",
        "key_types": [
          "MetricConfigOpt",
          "prometheus.GaugeVec",
          "prometheus.CounterVec",
          "prometheus.HistogramVec"
        ],
        "functions": [
          "MetricsHistogramOpt",
          "MetricsAfterNextOpt",
          "gaugeVec",
          "counterVec",
          "histogramVec",
          "registerTraceMetrics"
        ],
        "imports": [
          "github.com/labstack/echo-contrib/echoprometheus",
          "github.com/labstack/echo/v4",
          "github.com/prometheus/client_golang/prometheus"
        ],
        "side_effects": [
          "Registers various metrics with Prometheus"
        ],
        "complexity": "medium"
      },
      "pkg/http/middlewares.go": {
        "language": "Go",
        "purpose": "This file defines middleware for handling errors in HTTP requests and extracting IP addresses from headers.",
        "key_types": [
          "ErrorHandler",
          "GormRecordNotFoundHandler"
        ],
        "functions": [
          "GlobalErrorHandler",
          "NewGormRecordNotFoundHandler",
          "HandleError",
          "ExtractIPFromHeaders",
          "trimIp"
        ],
        "imports": [
          "errors",
          "net/http",
          "strings",
          "github.com/jackc/pgconn",
          "github.com/labstack/echo/v4",
          "gorm.io/gorm",
          "github.com/axieinfinity/ronin-wallet-services/pkg/errors",
          "github.com/axieinfinity/ronin-wallet-services/pkg/validation"
        ],
        "side_effects": [
          "Logs errors when JSON response fails"
        ],
        "risks": [
          "Potential exposure of sensitive error messages in responses"
        ],
        "complexity": "medium"
      },
      "pkg/http/server.go": {
        "language": "Go",
        "purpose": "This file implements an HTTP server using the Echo framework, providing configuration options and middleware support.",
        "key_types": [
          "ServerConfig",
          "Server"
        ],
        "functions": [
          "NewServer",
          "Use",
          "WithValidator",
          "WithErrorHandlers",
          "WithRequestLogging",
          "WithCORS",
          "WithMetrics",
          "WithGroupHandler",
          "WithHandler",
          "WithGzip",
          "WithTimeout",
          "Recover",
          "Start",
          "Stop",
          "Addr"
        ],
        "imports": [
          "context",
          "fmt",
          "time",
          "github.com/axieinfinity/ecosystem-go-common/echo/middleware",
          "github.com/labstack/echo-contrib/echoprometheus",
          "github.com/labstack/echo/v4",
          "github.com/labstack/echo/v4/middleware",
          "go.uber.org/zap"
        ],
        "side_effects": [
          "Sets up HTTP server with middleware and error handling",
          "Logs requests if logging is enabled",
          "Handles CORS if configured"
        ],
        "risks": [
          "Potential for denial of service if timeout is not properly configured",
          "Improper error handling could expose sensitive information"
        ],
        "complexity": "medium"
      },
      "pkg/http/tracer.go": {
        "language": "Go",
        "purpose": "This file implements tracing for HTTP connections, allowing tracking of connection metrics and performance.",
        "key_types": [
          "TracingConn",
          "TracingDialer",
          "TracingRoundTripper"
        ],
        "functions": [
          "Close",
          "DialContext",
          "RoundTrip",
          "newTracer"
        ],
        "imports": [
          "context",
          "crypto/tls",
          "net",
          "net/http",
          "net/http/httptrace",
          "strconv",
          "strings",
          "sync/atomic",
          "time"
        ],
        "side_effects": [
          "Metrics are updated on connection open/close and request duration."
        ],
        "complexity": "medium"
      }
    }
  }
}