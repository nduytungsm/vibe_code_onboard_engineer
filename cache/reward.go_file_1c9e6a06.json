{
  "content_hash": "5250f8f5c4281ba7f10d2fa821fba778",
  "timestamp": "2025-09-26T12:28:25.911448+07:00",
  "result": {
    "language": "Go",
    "purpose": "This file defines a repository interface and its implementation for managing rewards in a system, including CRUD operations and transactions.",
    "key_types": [
      "RewardRepo",
      "rewardRepo",
      "UpsertRewardParams"
    ],
    "functions": [
      "NewRewardRepository",
      "DeleteAllQuestRewards",
      "UpsertQuestRewards",
      "CreateHistory",
      "NewTx",
      "ListQuestRewards",
      "UpsertRewardPool",
      "ListPools"
    ],
    "imports": [
      "context",
      "gorm.io/gorm",
      "gorm.io/gorm/clause",
      "github.com/axieinfinity/ronin-wallet-services/internal/enums/quest_center",
      "github.com/axieinfinity/ronin-wallet-services/internal/repositories/models",
      "github.com/axieinfinity/ronin-wallet-services/internal/routers/dtos/enums"
    ],
    "side_effects": [
      "Database modifications through CRUD operations",
      "Transaction management"
    ],
    "risks": [
      "Potential SQL injection if inputs are not properly sanitized",
      "Transaction failures may lead to inconsistent states"
    ],
    "complexity": "medium"
  }
}