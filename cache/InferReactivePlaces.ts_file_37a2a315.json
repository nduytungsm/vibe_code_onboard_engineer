{
  "content_hash": "5da286c0685a98522f1ea1ad74ffa5c5",
  "timestamp": "2025-09-24T15:26:27.967836+07:00",
  "result": {
    "language": "TypeScript",
    "purpose": "Infers which 'Place's are reactive in a React component or hook based on various conditions.",
    "key_types": [
      "StableSidemap",
      "HIRFunction",
      "IdentifierId",
      "Instruction",
      "Environment"
    ],
    "functions": [
      "inferReactivePlaces",
      "handleInstruction",
      "isStable",
      "isReactiveControlledBlock"
    ],
    "imports": [
      "CompilerError",
      "BlockId",
      "Effect",
      "Environment",
      "HIRFunction",
      "Identifier",
      "IdentifierId",
      "Instruction",
      "Place",
      "computePostDominatorTree",
      "evaluatesToStableTypeOrContainer",
      "getHookKind",
      "isStableType",
      "isStableTypeContainer",
      "isUseOperator",
      "PostDominator",
      "eachInstructionLValue",
      "eachInstructionOperand",
      "eachInstructionValueOperand",
      "eachTerminalOperand",
      "findDisjointMutableValues",
      "isMutable",
      "DisjointSet",
      "assertExhaustive"
    ],
    "side_effects": [
      "Modifies the stability map based on instructions processed."
    ],
    "complexity": "medium"
  }
}