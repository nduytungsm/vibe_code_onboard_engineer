{
  "content_hash": "6a8468fc2032fd4efd1f74f761c8d782",
  "timestamp": "2025-09-26T08:44:44.083238+07:00",
  "result": {
    "language": "TypeScript",
    "purpose": "Validates the usage of React hooks according to the Rules of Hooks.",
    "key_types": [
      "Kind",
      "HIRFunction",
      "CompilerError",
      "CompilerErrorDetail",
      "ErrorCategory",
      "SourceLocation",
      "Place",
      "IdentifierId"
    ],
    "functions": [
      "joinKinds",
      "validateHooksUsage",
      "recordError",
      "recordConditionalHookError",
      "recordInvalidHookUsageError",
      "recordDynamicHookUsageError",
      "getKindForPlace",
      "visitPlace",
      "setKind"
    ],
    "imports": [
      "@babel/types",
      "../CompilerError",
      "../HIR/ComputeUnconditionalBlocks",
      "../HIR/Environment",
      "../HIR/HIR",
      "../HIR/visitors",
      "../Utils/utils",
      "../Utils/Result"
    ],
    "side_effects": [
      "Modifies the errors map to record validation errors."
    ],
    "risks": [
      "Potential for incorrect validation if hooks are used in non-standard ways."
    ],
    "complexity": "medium"
  }
}