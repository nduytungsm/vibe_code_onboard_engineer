{
  "content_hash": "edba3c6638871904482a9085374725bf",
  "timestamp": "2025-09-26T14:04:31.109231+07:00",
  "result": {
    "path": "pkg/docker",
    "purpose": "This folder is responsible for managing various containerized services (Kafka, PostgreSQL, Redis) using Docker for testing purposes.",
    "languages": {
      "Go": 4
    },
    "key_modules": [
      "helper.go",
      "kafka.go",
      "postgres.go",
      "redis.go"
    ],
    "dependencies": [
      "Testcontainers"
    ],
    "architecture": "The folder follows a modular architecture pattern, where each file encapsulates the logic for managing a specific type of container, promoting separation of concerns and reusability.",
    "file_summaries": {
      "pkg/docker/helper.go": {
        "language": "Go",
        "purpose": "Provides a function to find a free TCP port on localhost.",
        "key_types": [
          "getFreePort"
        ],
        "functions": null,
        "imports": null,
        "complexity": "low"
      },
      "pkg/docker/kafka.go": {
        "language": "Go",
        "purpose": "This file provides functionality to manage a Kafka container using Testcontainers.",
        "key_types": [
          "Kafka",
          "NewKafka",
          "Start",
          "Stop"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "pkg/docker/postgres.go": {
        "language": "Go",
        "purpose": "Manages a PostgreSQL database container for testing purposes using Docker.",
        "key_types": [
          "Postgres",
          "NewPostgres",
          "Start"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      },
      "pkg/docker/redis.go": {
        "language": "Go",
        "purpose": "This file manages a Redis container using Testcontainers for integration testing.",
        "key_types": [
          "Redis",
          "NewRedis",
          "Start"
        ],
        "functions": null,
        "imports": null,
        "complexity": "medium"
      }
    }
  }
}