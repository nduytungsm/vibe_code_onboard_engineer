#!/bin/bash

# Repository Analyzer Deployment Script
set -e

echo "üöÄ Starting Repository Analyzer deployment..."

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker is not installed. Please install Docker first."
    exit 1
fi

# Check if Docker Compose is installed
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Check if OpenAI API key is set
if [ -z "$OPENAI_API_KEY" ]; then
    echo "‚ö†Ô∏è  OpenAI API key is not set."
    echo "   Please set it using: export OPENAI_API_KEY='your-api-key-here'"
    echo "   Or create a .env file with: OPENAI_API_KEY=your-api-key-here"
    echo ""
    read -p "Do you want to continue without API key? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Deployment cancelled. Please set OPENAI_API_KEY and try again."
        exit 1
    fi
    echo "‚ö†Ô∏è  Continuing without API key. Some features may not work."
fi

# Build and start services
echo "üî® Building Docker images..."
docker-compose build --no-cache

echo "üèÉ Starting services..."
docker-compose up -d

echo "‚è≥ Waiting for services to be ready..."
sleep 30

# Check backend health
echo "üîç Checking backend health..."
for i in {1..10}; do
    if curl -f http://localhost:8080/health >/dev/null 2>&1; then
        echo "‚úÖ Backend is healthy"
        break
    fi
    if [ $i -eq 10 ]; then
        echo "‚ùå Backend health check failed"
        docker-compose logs backend
        exit 1
    fi
    echo "‚è≥ Waiting for backend... ($i/10)"
    sleep 5
done

# Check frontend
echo "üîç Checking frontend..."
for i in {1..5}; do
    if curl -f http://localhost >/dev/null 2>&1; then
        echo "‚úÖ Frontend is accessible"
        break
    fi
    if [ $i -eq 5 ]; then
        echo "‚ùå Frontend check failed"
        docker-compose logs frontend
        exit 1
    fi
    echo "‚è≥ Waiting for frontend... ($i/5)"
    sleep 3
done

echo ""
echo "üéâ Deployment successful!"
echo ""
echo "üìç Access your application at:"
echo "   Frontend: http://localhost"
echo "   Backend API: http://localhost:8080"
echo "   Health Check: http://localhost:8080/health"
echo ""
echo "üìã Useful commands:"
echo "   View logs: docker-compose logs -f"
echo "   Stop services: docker-compose down"
echo "   Restart: docker-compose restart"
echo "   Update: docker-compose pull && docker-compose up -d"
echo ""
echo "üîß For production deployment, consider:"
echo "   - Using a reverse proxy (nginx, traefik)"
echo "   - Setting up SSL certificates"
echo "   - Configuring proper domain names"
echo "   - Setting up monitoring and logging"
